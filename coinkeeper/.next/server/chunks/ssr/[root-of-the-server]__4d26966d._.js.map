{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///Users/miraskarasbekov/Desktop/CoinKeeperNew/coinkeeper/src/providers/auth-provider.tsx"],"sourcesContent":["'use client';\n\nimport { SessionProvider } from \"next-auth/react\";\n\nexport function AuthProvider({ children }: { children: React.ReactNode }) {\n  return <SessionProvider>{children}</SessionProvider>;\n} "],"names":[],"mappings":";;;;AAEA;AAFA;;;AAIO,SAAS,aAAa,EAAE,QAAQ,EAAiC;IACtE,qBAAO,8OAAC,8IAAA,CAAA,kBAAe;kBAAE;;;;;;AAC3B","debugId":null}},
    {"offset": {"line": 38, "column": 0}, "map": {"version":3,"sources":["file:///Users/miraskarasbekov/Desktop/CoinKeeperNew/coinkeeper/src/providers/theme-provider.tsx"],"sourcesContent":["'use client';\n\nimport { ThemeProvider as MUIThemeProvider, createTheme } from '@mui/material';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport { createContext, useEffect, useState, useContext } from 'react';\n\ntype Theme = 'light' | 'dark' | 'system';\n\ninterface ThemeContextProps {\n  theme: Theme;\n  setTheme: (theme: Theme) => void;\n}\n\n// Create the context with a default value\nconst defaultThemeContext: ThemeContextProps = {\n  theme: 'system',\n  setTheme: () => console.warn('Theme context not initialized')\n};\n\nconst ThemeContext = createContext<ThemeContextProps>(defaultThemeContext);\n\n// Exports the context for direct use if needed\nexport { ThemeContext };\n\nexport function ThemeProvider({ children }: { children: React.ReactNode }) {\n  const [theme, setTheme] = useState<Theme>('system');\n  const [mounted, setMounted] = useState(false);\n  const [mode, setMode] = useState<'light' | 'dark'>('light');\n\n  // Initial setup effect - runs only once\n  useEffect(() => {\n    // Set mounted to true when component mounts\n    setMounted(true);\n    \n    // Load theme from localStorage if available\n    const savedTheme = localStorage.getItem('theme') as Theme;\n    if (savedTheme) {\n      setTheme(savedTheme);\n      applyTheme(savedTheme);\n    } else {\n      // Default to system preference\n      setTheme('system');\n      applyTheme('system');\n    }\n\n    // Add an event listener for system preference changes\n    const mediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\n    const handleChange = () => {\n      if (theme === 'system') {\n        applyTheme('system');\n      }\n    };\n\n    mediaQuery.addEventListener('change', handleChange);\n    return () => mediaQuery.removeEventListener('change', handleChange);\n  }, []); // Empty dependency array so this only runs once\n\n  // Effect to apply theme changes\n  useEffect(() => {\n    if (mounted) {\n      applyTheme(theme);\n    }\n  }, [theme, mounted]);\n\n  const applyTheme = (selectedTheme: Theme) => {\n    if (typeof document === 'undefined') return; // Skip during SSR\n    \n    const root = document.documentElement;\n    const body = document.body;\n    \n    // Remove existing theme classes\n    root.classList.remove('dark-theme', 'light-theme', 'system-theme');\n    root.removeAttribute('data-theme');\n    body.removeAttribute('data-theme');\n    \n    let newMode: 'light' | 'dark' = 'light';\n    \n    if (selectedTheme === 'dark') {\n      root.classList.add('dark-theme');\n      newMode = 'dark';\n      root.setAttribute('data-theme', 'dark');\n      body.setAttribute('data-theme', 'dark');\n    } else if (selectedTheme === 'light') {\n      root.classList.add('light-theme');\n      newMode = 'light';\n      root.setAttribute('data-theme', 'light');\n      body.setAttribute('data-theme', 'light');\n    } else if (selectedTheme === 'system') {\n      // Check system preference\n      const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;\n      if (prefersDark) {\n        root.classList.add('dark-theme');\n        newMode = 'dark';\n        root.setAttribute('data-theme', 'dark');\n        body.setAttribute('data-theme', 'dark');\n      } else {\n        root.classList.add('light-theme');\n        newMode = 'light';\n        root.setAttribute('data-theme', 'light');\n        body.setAttribute('data-theme', 'light');\n      }\n      root.classList.add('system-theme');\n    }\n    \n    setMode(newMode);\n  };\n\n  const setThemeValue = (newTheme: Theme) => {\n    console.log('Setting theme to:', newTheme);\n    \n    // First update localStorage\n    localStorage.setItem('theme', newTheme);\n    \n    // Then update the state\n    setTheme(newTheme);\n    \n    // Force DOM updates in case of issues with state synchronization\n    document.documentElement.dataset.themeLoading = 'true';\n    setTimeout(() => {\n      applyTheme(newTheme);\n      document.documentElement.dataset.themeLoading = 'false';\n    }, 0);\n  };\n\n  // Create MUI theme based on current mode\n  const lightTheme = createTheme({\n    palette: {\n      mode: 'light',\n      primary: {\n        main: '#006FEE',\n        light: '#60A5FA',\n        dark: '#2563EB',\n        contrastText: '#ffffff',\n      },\n      secondary: {\n        main: '#71717A',\n        light: '#A1A1AA',\n        dark: '#52525B',\n        contrastText: '#ffffff',\n      },\n      background: {\n        default: '#ffffff',\n        paper: '#ffffff',\n      },\n      text: {\n        primary: '#11181C',\n        secondary: '#71717A',\n      },\n    },\n    components: {\n      MuiPaper: {\n        styleOverrides: {\n          root: {\n            backgroundImage: 'none',\n            backgroundColor: '#ffffff',\n            boxShadow: '0 2px 10px rgba(0, 0, 0, 0.05)',\n            '&:hover': {\n              boxShadow: '0 4px 20px rgba(0, 0, 0, 0.1)',\n            },\n          },\n        },\n      },\n      MuiButton: {\n        styleOverrides: {\n          root: {\n            textTransform: 'none',\n            borderRadius: '8px',\n            fontWeight: 500,\n          },\n          contained: {\n            boxShadow: 'none',\n            '&:hover': {\n              boxShadow: '0 4px 12px rgba(0, 111, 238, 0.2)',\n            },\n          },\n        },\n      },\n      MuiTextField: {\n        styleOverrides: {\n          root: {\n            '& .MuiOutlinedInput-root': {\n              '& fieldset': {\n                borderColor: '#e4e4e7',\n              },\n              '&:hover fieldset': {\n                borderColor: '#006FEE',\n              },\n              '&.Mui-focused fieldset': {\n                borderColor: '#006FEE',\n              },\n            },\n          },\n        },\n      },\n      MuiDrawer: {\n        styleOverrides: {\n          paper: {\n            backgroundColor: '#ffffff',\n            borderRight: '1px solid #e0e0e0',\n          },\n        },\n      },\n      MuiListItem: {\n        styleOverrides: {\n          root: {\n            '&.Mui-selected': {\n              backgroundColor: '#e8f0fe',\n              color: '#006FEE',\n              '&:hover': {\n                backgroundColor: '#e8f0fe',\n              },\n            },\n            '&:hover': {\n              backgroundColor: '#f5f5f5',\n            },\n          },\n        },\n      },\n    },\n  });\n\n  const darkTheme = createTheme({\n    palette: {\n      mode: 'dark',\n      primary: {\n        main: '#60A5FA',\n        light: '#93C5FD',\n        dark: '#3B82F6',\n        contrastText: '#ffffff',\n      },\n      secondary: {\n        main: '#A1A1AA',\n        light: '#D4D4D8',\n        dark: '#71717A',\n        contrastText: '#ffffff',\n      },\n      background: {\n        default: '#09090b',\n        paper: '#18181b',\n      },\n      text: {\n        primary: '#ffffff',\n        secondary: '#A1A1AA',\n      },\n    },\n    components: {\n      MuiPaper: {\n        styleOverrides: {\n          root: {\n            backgroundImage: 'none',\n            backgroundColor: '#18181b',\n            boxShadow: '0 2px 10px rgba(0, 0, 0, 0.2)',\n            '&:hover': {\n              boxShadow: '0 4px 20px rgba(0, 0, 0, 0.4)',\n            },\n          },\n        },\n      },\n      MuiButton: {\n        styleOverrides: {\n          root: {\n            textTransform: 'none',\n            borderRadius: '8px',\n            fontWeight: 500,\n          },\n          contained: {\n            boxShadow: 'none',\n            '&:hover': {\n              boxShadow: '0 4px 12px rgba(96, 165, 250, 0.3)',\n            },\n          },\n        },\n      },\n      MuiTextField: {\n        styleOverrides: {\n          root: {\n            '& .MuiOutlinedInput-root': {\n              '& fieldset': {\n                borderColor: '#27272a',\n              },\n              '&:hover fieldset': {\n                borderColor: '#60A5FA',\n              },\n              '&.Mui-focused fieldset': {\n                borderColor: '#60A5FA',\n              },\n            },\n          },\n        },\n      },\n      MuiDrawer: {\n        styleOverrides: {\n          paper: {\n            backgroundColor: '#18181b',\n            borderRight: '1px solid #27272a',\n          },\n        },\n      },\n      MuiListItem: {\n        styleOverrides: {\n          root: {\n            '&.Mui-selected': {\n              backgroundColor: '#1e293b',\n              color: '#60A5FA',\n              '&:hover': {\n                backgroundColor: '#1e293b',\n              },\n            },\n            '&:hover': {\n              backgroundColor: '#27272a',\n            },\n          },\n        },\n      },\n    },\n  });\n\n  // Prevent flash of unstyled content\n  if (!mounted) {\n    return <>{children}</>;\n  }\n\n  return (\n    <ThemeContext.Provider value={{ theme, setTheme: setThemeValue }}>\n      <MUIThemeProvider theme={theme === 'dark' ? darkTheme : lightTheme}>\n        <CssBaseline />\n        {children}\n      </MUIThemeProvider>\n    </ThemeContext.Provider>\n  );\n}\n\n// Custom hook for using the theme context\nexport function useTheme() {\n  // Context now always has a value due to default context\n  return useContext(ThemeContext);\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 380, "column": 0}, "map": {"version":3,"sources":["file:///Users/miraskarasbekov/Desktop/CoinKeeperNew/coinkeeper/src/providers/language-provider.tsx"],"sourcesContent":["'use client';\n\nimport { createContext, useContext, useEffect, useState, ReactNode } from 'react';\n\ntype Language = 'en' | 'ru' | 'kk';\n\n// Обновленный тип для поддержки вложенных переводов\ntype TranslationValue = string | { [key: string]: TranslationValue };\ntype TranslationRecord = Record<string, TranslationValue>;\n\ninterface LanguageContextProps {\n  language: Language;\n  setLanguage: (language: Language) => void;\n  t: (key: string) => string;\n  isClientReady: boolean;\n}\n\n// Create context with default values to prevent errors during initialization\nconst defaultContextValue: LanguageContextProps = {\n  language: 'en',\n  setLanguage: () => {},\n  t: (key: string) => key,\n  isClientReady: false\n};\n\nconst LanguageContext = createContext<LanguageContextProps>(defaultContextValue);\n\n// Translations dictionary - make sure to EXACTLY match capitalization for SSR/CSR consistency\nconst translations: Record<Language, TranslationRecord> = {\n  en: {\n    'dashboard': 'Dashboard',\n    'accounts': 'Accounts',\n    'transactions': 'Transactions',\n    'categories': 'Categories',\n    'budgets': 'Budgets',\n    'goals': 'Goals',\n    'reports': 'Reports',\n    'settings': {\n      title: 'Settings',\n      appearance: {\n        title: 'Appearance',\n        theme: 'Theme',\n        light: 'Light',\n        dark: 'Dark',\n        system: 'System'\n      },\n      currency: {\n        title: 'Currency',\n        default: 'Default Currency'\n      },\n      language: {\n        title: 'Language & Format',\n        select: 'Language',\n        dateFormat: 'Date Format'\n      },\n      notifications: {\n        title: 'Notifications',\n        enable: 'Enable Budget Notifications'\n      },\n      security: {\n        title: 'Security',\n        passwordDesc: 'Change your account password. It is recommended to use a strong password.',\n        currentPassword: 'Current Password',\n        newPassword: 'New Password',\n        confirmPassword: 'Confirm Password',\n        changePassword: 'Change Password',\n        passwordSuccess: 'Password successfully updated!'\n      },\n      saveButton: 'Save Settings',\n      saveSuccess: 'Settings saved successfully!'\n    },\n    'welcome': 'Welcome',\n    'logout': 'Logout',\n    'add_budget': 'Add Budget',\n    'budget_name': 'Budget Name',\n    'amount': 'Amount',\n    'period': 'Period',\n    'category': 'Category',\n    'monthly': 'Monthly',\n    'yearly': 'Yearly',\n    'cancel': 'Cancel',\n    'add': 'Add',\n    'save': 'Save',\n    'edit': 'Edit',\n    'save_settings': 'Save Settings',\n    'change_password': 'Change Password',\n    'current_password': 'Current Password',\n    'new_password': 'New Password',\n    'confirm_password': 'Confirm Password',\n    'update_password': 'Update Password',\n    'appearance': 'Appearance',\n    'theme': 'Theme',\n    'light': 'Light',\n    'dark': 'Dark',\n    'system': 'Use system settings',\n    'currency': 'Currency',\n    'default_currency': 'Default Currency',\n    'language_and_format': 'Language and Format',\n    'language': 'Language',\n    'date_format': 'Date Format',\n    'notifications': 'Notifications',\n    'enable_budget_notifications': 'Enable budget notifications',\n    // Goal page translations\n    'goal_name': 'Goal Name',\n    'target_amount': 'Target Amount ($)',\n    'current_amount': 'Current Amount ($)',\n    'deadline': 'Deadline',\n    'description': 'Description (Optional)',\n    'add_goal': 'Add Goal',\n    'edit_goal': 'Edit Goal',\n    'delete_goal': 'Delete Goal',\n    'no_goals': 'No goals created yet. Click \"Add Goal\" to get started.',\n    'confirmation_delete': 'Are you sure you want to delete this goal?',\n  },\n  ru: {\n    'dashboard': 'Панель управления',\n    'accounts': 'Счета',\n    'transactions': 'Транзакции',\n    'categories': 'Категории',\n    'budgets': 'Бюджеты',\n    'goals': 'Цели',\n    'reports': 'Отчеты',\n    'settings': {\n      title: 'Настройки',\n      appearance: {\n        title: 'Внешний вид',\n        theme: 'Тема',\n        light: 'Светлая',\n        dark: 'Темная',\n        system: 'Системная'\n      },\n      currency: {\n        title: 'Валюта',\n        default: 'Основная валюта'\n      },\n      language: {\n        title: 'Язык и формат',\n        select: 'Язык',\n        dateFormat: 'Формат даты'\n      },\n      notifications: {\n        title: 'Уведомления',\n        enable: 'Включить уведомления о бюджете'\n      },\n      security: {\n        title: 'Безопасность',\n        passwordDesc: 'Смена пароля учетной записи. Рекомендуется использовать надежный пароль.',\n        currentPassword: 'Текущий пароль',\n        newPassword: 'Новый пароль',\n        confirmPassword: 'Подтвердите пароль',\n        changePassword: 'Сменить пароль',\n        passwordSuccess: 'Пароль успешно обновлен!'\n      },\n      saveButton: 'Сохранить настройки',\n      saveSuccess: 'Настройки успешно сохранены!'\n    },\n    'welcome': 'Добро пожаловать',\n    'logout': 'Выход',\n    'add_budget': 'Добавить бюджет',\n    'budget_name': 'Название бюджета',\n    'amount': 'Сумма',\n    'period': 'Период',\n    'category': 'Категория',\n    'monthly': 'Ежемесячно',\n    'yearly': 'Ежегодно',\n    'cancel': 'Отмена',\n    'add': 'Добавить',\n    'save': 'Сохранить',\n    'edit': 'Изменить',\n    'save_settings': 'Сохранить настройки',\n    'change_password': 'Изменить пароль',\n    'current_password': 'Текущий пароль',\n    'new_password': 'Новый пароль',\n    'confirm_password': 'Подтвердите пароль',\n    'update_password': 'Обновить пароль',\n    'appearance': 'Внешний вид',\n    'theme': 'Тема',\n    'light': 'Светлая',\n    'dark': 'Темная',\n    'system': 'Использовать настройки системы',\n    'currency': 'Валюта',\n    'default_currency': 'Валюта по умолчанию',\n    'language_and_format': 'Язык и формат',\n    'language': 'Язык',\n    'date_format': 'Формат даты',\n    'notifications': 'Уведомления',\n    'enable_budget_notifications': 'Включить уведомления о бюджете',\n    // Goal page translations\n    'goal_name': 'Название цели',\n    'target_amount': 'Целевая сумма (₽)',\n    'current_amount': 'Текущая сумма (₽)',\n    'deadline': 'Срок',\n    'description': 'Описание (Необязательно)',\n    'add_goal': 'Добавить цель',\n    'edit_goal': 'Изменить цель',\n    'delete_goal': 'Удалить цель',\n    'no_goals': 'У вас пока нет целей. Нажмите \"Добавить цель\", чтобы начать.',\n    'confirmation_delete': 'Вы уверены, что хотите удалить эту цель?',\n  },\n  kk: {\n    'dashboard': 'Басқару панелі',\n    'accounts': 'Шоттар',\n    'transactions': 'Транзакциялар',\n    'categories': 'Санаттар',\n    'budgets': 'Бюджеттер',\n    'goals': 'Мақсаттар',\n    'reports': 'Есептер',\n    'settings': {\n      title: 'Параметрлер',\n      appearance: {\n        title: 'Сыртқы түрі',\n        theme: 'Тақырып',\n        light: 'Жарық',\n        dark: 'Қараңғы',\n        system: 'Жүйе параметрлері'\n      },\n      currency: {\n        title: 'Валюта',\n        default: 'Негізгі валюта'\n      },\n      language: {\n        title: 'Тіл және пішім',\n        select: 'Тіл',\n        dateFormat: 'Күн пішімі'\n      },\n      notifications: {\n        title: 'Хабарландырулар',\n        enable: 'Бюджет хабарландыруларын қосу'\n      },\n      security: {\n        title: 'Қауіпсіздік',\n        passwordDesc: 'Аккаунт құпиясөзін өзгерту. Күрделі құпиясөз қолдануды ұсынамыз.',\n        currentPassword: 'Ағымдағы құпиясөз',\n        newPassword: 'Жаңа құпиясөз',\n        confirmPassword: 'Құпиясөзді растаңыз',\n        changePassword: 'Құпиясөзді өзгерту',\n        passwordSuccess: 'Құпия сөз сәтті жаңартылды!'\n      },\n      saveButton: 'Параметрлерді сақтау',\n      saveSuccess: 'Параметрлер сәтті сақталды!'\n    },\n    'welcome': 'Қош келдіңіз',\n    'logout': 'Шығу',\n    'add_budget': 'Бюджет қосу',\n    'budget_name': 'Бюджет атауы',\n    'amount': 'Сома',\n    'period': 'Кезең',\n    'category': 'Санат',\n    'monthly': 'Ай сайын',\n    'yearly': 'Жыл сайын',\n    'cancel': 'Бас тарту',\n    'add': 'Қосу',\n    'save': 'Сақтау',\n    'edit': 'Өңдеу',\n    'save_settings': 'Параметрлерді сақтау',\n    'change_password': 'Құпия сөзді өзгерту',\n    'current_password': 'Ағымдағы құпия сөз',\n    'new_password': 'Жаңа құпия сөз',\n    'confirm_password': 'Құпия сөзді растаңыз',\n    'update_password': 'Құпия сөзді жаңарту',\n    'appearance': 'Сыртқы түрі',\n    'theme': 'Тақырып',\n    'light': 'Жарық',\n    'dark': 'Қараңғы',\n    'system': 'Жүйе параметрлерін пайдалану',\n    'currency': 'Валюта',\n    'default_currency': 'Әдепкі валюта',\n    'language_and_format': 'Тіл және пішім',\n    'language': 'Тіл',\n    'date_format': 'Күн пішімі',\n    'notifications': 'Хабарландырулар',\n    'enable_budget_notifications': 'Бюджет хабарландыруларын қосу',\n    // Goal page translations\n    'goal_name': 'Мақсат атауы',\n    'target_amount': 'Мақсатты сома (₸)',\n    'current_amount': 'Ағымдағы сома (₸)',\n    'deadline': 'Мерзімі',\n    'description': 'Сипаттама (Міндетті емес)',\n    'add_goal': 'Мақсат қосу',\n    'edit_goal': 'Мақсатты өңдеу',\n    'delete_goal': 'Мақсатты жою',\n    'no_goals': 'Сізде әлі мақсаттар жоқ. Бастау үшін \"Мақсат қосу\" түймесін басыңыз.',\n    'confirmation_delete': 'Бұл мақсатты шынымен жойғыңыз келе ме?',\n  }\n};\n\nexport function LanguageProvider({ children }: { children: ReactNode }) {\n  const [language, setLanguage] = useState<Language>('en');\n  const [isClientReady, setIsClientReady] = useState(false);\n\n  useEffect(() => {\n    // Get saved language or detect browser language\n    const savedLanguage = localStorage.getItem('language') as Language;\n    if (savedLanguage && ['en', 'ru', 'kk'].includes(savedLanguage)) {\n      setLanguage(savedLanguage);\n    } else {\n      // Default to browser language or 'en'\n      const browserLang = navigator.language.split('-')[0];\n      if (['en', 'ru', 'kk'].includes(browserLang as Language)) {\n        setLanguage(browserLang as Language);\n      }\n    }\n    \n    // Mark client as ready for rendering\n    setIsClientReady(true);\n    \n    // Apply language to HTML tag\n    document.documentElement.lang = language;\n  }, []);\n\n  // Update language when it changes\n  useEffect(() => {\n    if (isClientReady) {\n      localStorage.setItem('language', language);\n      document.documentElement.lang = language;\n    }\n  }, [language, isClientReady]);\n\n  const applyLanguage = (selectedLanguage: Language) => {\n    if (typeof document === 'undefined') return;\n    document.documentElement.lang = selectedLanguage;\n  };\n\n  const setLanguageValue = (newLanguage: Language) => {\n    localStorage.setItem('language', newLanguage);\n    setLanguage(newLanguage);\n    applyLanguage(newLanguage);\n  };\n\n  // Обновленная функция для получения перевода, поддерживающая вложенные объекты\n  const t = (key: string): string => {\n    if (!key) return '';\n    \n    try {\n      // Get translations for current language or fallback to English\n      const currentTranslations = translations[language] || translations.en;\n      \n      // Handle nested keys like 'settings.appearance.theme'\n      if (key.includes('.')) {\n        const keys = key.split('.');\n        let result: any = currentTranslations;\n        \n        // Navigate through the nested objects\n        for (const k of keys) {\n          if (result && typeof result === 'object' && k in result) {\n            result = result[k];\n          } else {\n            console.warn(`Translation key not found: ${key}`);\n            return key; // Key path not found\n          }\n        }\n        \n        return typeof result === 'string' ? result : key;\n      }\n      \n      // Handle regular keys\n      const translation = currentTranslations[key];\n      if (typeof translation === 'string') {\n        return translation;\n      }\n      \n      // If not found, try English or return the key itself\n      const enTranslation = translations.en[key];\n      return typeof enTranslation === 'string' ? enTranslation : key;\n    } catch (error) {\n      console.error(`Error in translation function for key: ${key}`, error);\n      return key;\n    }\n  };\n\n  return (\n    <LanguageContext.Provider value={{ language, setLanguage: setLanguageValue, t, isClientReady }}>\n      {children}\n    </LanguageContext.Provider>\n  );\n}\n\nexport function useLanguage() {\n  const context = useContext(LanguageContext);\n  if (!context) {\n    throw new Error('useLanguage must be used within a LanguageProvider');\n  }\n  return context;\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 763, "column": 0}, "map": {"version":3,"sources":["file:///Users/miraskarasbekov/Desktop/CoinKeeperNew/coinkeeper/src/providers/providers.tsx"],"sourcesContent":["'use client';\n\nimport { SessionProvider } from 'next-auth/react';\nimport { AuthProvider } from './auth-provider';\nimport { ThemeProvider } from './theme-provider';\nimport { LanguageProvider } from './language-provider';\nimport { useEffect } from 'react';\n\nexport default function Providers({ children }: { children: React.ReactNode }) {\n  // Add a useEffect to log when providers are mounted - helps with debugging\n  useEffect(() => {\n    console.log('Providers mounted');\n    \n    // Force a refresh of the styles on client side\n    const root = document.documentElement;\n    const currentTheme = localStorage.getItem('theme');\n    if (currentTheme) {\n      console.log('Initializing theme from localStorage:', currentTheme);\n    }\n\n    // Check authentication status on mount\n    const checkAuth = async () => {\n      try {\n        const response = await fetch('/api/auth/session');\n        const session = await response.json();\n        console.log('Initial auth check:', session);\n      } catch (error) {\n        console.error('Error checking auth status:', error);\n      }\n    };\n\n    checkAuth();\n  }, []);\n\n  return (\n    <SessionProvider refetchInterval={5 * 60} refetchOnWindowFocus={true}>\n      <AuthProvider>\n        <ThemeProvider>\n          <LanguageProvider>\n            {children}\n          </LanguageProvider>\n        </ThemeProvider>\n      </AuthProvider>\n    </SessionProvider>\n  );\n} "],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AACA;AANA;;;;;;;AAQe,SAAS,UAAU,EAAE,QAAQ,EAAiC;IAC3E,2EAA2E;IAC3E,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,QAAQ,GAAG,CAAC;QAEZ,+CAA+C;QAC/C,MAAM,OAAO,SAAS,eAAe;QACrC,MAAM,eAAe,aAAa,OAAO,CAAC;QAC1C,IAAI,cAAc;YAChB,QAAQ,GAAG,CAAC,yCAAyC;QACvD;QAEA,uCAAuC;QACvC,MAAM,YAAY;YAChB,IAAI;gBACF,MAAM,WAAW,MAAM,MAAM;gBAC7B,MAAM,UAAU,MAAM,SAAS,IAAI;gBACnC,QAAQ,GAAG,CAAC,uBAAuB;YACrC,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC,+BAA+B;YAC/C;QACF;QAEA;IACF,GAAG,EAAE;IAEL,qBACE,8OAAC,8IAAA,CAAA,kBAAe;QAAC,iBAAiB,IAAI;QAAI,sBAAsB;kBAC9D,cAAA,8OAAC,qIAAA,CAAA,eAAY;sBACX,cAAA,8OAAC,sIAAA,CAAA,gBAAa;0BACZ,cAAA,8OAAC,yIAAA,CAAA,mBAAgB;8BACd;;;;;;;;;;;;;;;;;;;;;AAMb","debugId":null}},
    {"offset": {"line": 859, "column": 0}, "map": {"version":3,"sources":["file:///Users/miraskarasbekov/Desktop/CoinKeeperNew/coinkeeper/src/components/layouts/dashboard-layout.tsx"],"sourcesContent":["'use client';\n\nimport { useState } from 'react';\nimport {\n  Box,\n  Drawer,\n  AppBar,\n  Toolbar,\n  List,\n  Typography,\n  Divider,\n  IconButton,\n  ListItem,\n  ListItemButton,\n  ListItemIcon,\n  ListItemText,\n  useTheme,\n  useMediaQuery,\n} from '@mui/material';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport DashboardIcon from '@mui/icons-material/Dashboard';\nimport AccountBalanceIcon from '@mui/icons-material/AccountBalance';\nimport ReceiptIcon from '@mui/icons-material/Receipt';\nimport CategoryIcon from '@mui/icons-material/Category';\nimport SavingsIcon from '@mui/icons-material/Savings';\nimport AssessmentIcon from '@mui/icons-material/Assessment';\nimport SettingsIcon from '@mui/icons-material/Settings';\nimport LogoutIcon from '@mui/icons-material/Logout';\nimport Link from 'next/link';\nimport { usePathname } from 'next/navigation';\n\nconst drawerWidth = 240;\n\nconst menuItems = [\n  { text: 'Dashboard', icon: <DashboardIcon />, path: '/dashboard' },\n  { text: 'Accounts', icon: <AccountBalanceIcon />, path: '/accounts' },\n  { text: 'Transactions', icon: <ReceiptIcon />, path: '/transactions' },\n  { text: 'Categories', icon: <CategoryIcon />, path: '/categories' },\n  { text: 'Budgets', icon: <SavingsIcon />, path: '/budgets' },\n  { text: 'Reports', icon: <AssessmentIcon />, path: '/reports' },\n  { text: 'Settings', icon: <SettingsIcon />, path: '/settings' },\n];\n\nexport default function DashboardLayout({ children }: { children: React.ReactNode }) {\n  const [mobileOpen, setMobileOpen] = useState(false);\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\n  const pathname = usePathname();\n\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n\n  const drawer = (\n    <div className=\"sidebar\">\n      <Toolbar>\n        <Typography variant=\"h6\" noWrap component=\"div\">\n          CoinKeeper\n        </Typography>\n      </Toolbar>\n      <Divider />\n      <List>\n        {menuItems.map((item) => (\n          <ListItem key={item.text} disablePadding>\n            <ListItemButton\n              component={Link}\n              href={item.path}\n              className={pathname === item.path ? 'active' : ''}\n            >\n              <ListItemIcon>{item.icon}</ListItemIcon>\n              <ListItemText primary={item.text} />\n            </ListItemButton>\n          </ListItem>\n        ))}\n        <ListItem disablePadding>\n          <ListItemButton>\n            <ListItemIcon>\n              <LogoutIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Logout\" />\n          </ListItemButton>\n        </ListItem>\n      </List>\n    </div>\n  );\n\n  return (\n    <Box sx={{ display: 'flex' }}>\n      <AppBar\n        position=\"fixed\"\n        sx={{\n          width: { sm: `calc(100% - ${drawerWidth}px)` },\n          ml: { sm: `${drawerWidth}px` },\n        }}\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            edge=\"start\"\n            onClick={handleDrawerToggle}\n            sx={{ mr: 2, display: { sm: 'none' } }}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap component=\"div\">\n            CoinKeeper\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Box\n        component=\"nav\"\n        sx={{ width: { sm: drawerWidth }, flexShrink: { sm: 0 } }}\n      >\n        {/* Mobile drawer */}\n        <Drawer\n          variant=\"temporary\"\n          open={mobileOpen}\n          onClose={handleDrawerToggle}\n          ModalProps={{\n            keepMounted: true, // Better open performance on mobile.\n          }}\n          sx={{\n            display: { xs: 'block', sm: 'none' },\n            '& .MuiDrawer-paper': { boxSizing: 'border-box', width: drawerWidth },\n          }}\n        >\n          {drawer}\n        </Drawer>\n        {/* Desktop drawer */}\n        <Drawer\n          variant=\"permanent\"\n          sx={{\n            display: { xs: 'none', sm: 'block' },\n            '& .MuiDrawer-paper': { boxSizing: 'border-box', width: drawerWidth },\n          }}\n          open\n        >\n          {drawer}\n        </Drawer>\n      </Box>\n      <Box\n        component=\"main\"\n        sx={{\n          flexGrow: 1,\n          p: 3,\n          width: { sm: `calc(100% - ${drawerWidth}px)` },\n          marginTop: '64px',\n        }}\n      >\n        {children}\n      </Box>\n    </Box>\n  );\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1228, "column": 0}, "map": {"version":3,"sources":["file:///Users/miraskarasbekov/Desktop/CoinKeeperNew/coinkeeper/src/components/layouts/client-layout.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { usePathname } from 'next/navigation';\nimport DashboardLayout from './dashboard-layout';\n\nexport default function ClientLayout({ children }: { children: React.ReactNode }) {\n  const [mounted, setMounted] = useState(false);\n  const pathname = usePathname();\n\n  // Handle client-side theme initialization\n  useEffect(() => {\n    setMounted(true);\n    \n    // Apply any saved theme from localStorage\n    const savedTheme = localStorage.getItem('theme');\n    if (savedTheme) {\n      document.documentElement.setAttribute('data-theme', savedTheme);\n    }\n    \n    console.log('Client layout initialized');\n  }, []);\n\n  // Prevent hydration mismatch by not rendering children until client-side\n  if (!mounted) {\n    return <div className=\"layout-loading\"></div>;\n  }\n\n  // Use DashboardLayout for all routes except auth routes\n  if (!pathname.startsWith('/auth')) {\n    return <DashboardLayout>{children}</DashboardLayout>;\n  }\n\n  return <>{children}</>;\n} "],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAJA;;;;;AAMe,SAAS,aAAa,EAAE,QAAQ,EAAiC;IAC9E,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,WAAW,CAAA,GAAA,kIAAA,CAAA,cAAW,AAAD;IAE3B,0CAA0C;IAC1C,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,WAAW;QAEX,0CAA0C;QAC1C,MAAM,aAAa,aAAa,OAAO,CAAC;QACxC,IAAI,YAAY;YACd,SAAS,eAAe,CAAC,YAAY,CAAC,cAAc;QACtD;QAEA,QAAQ,GAAG,CAAC;IACd,GAAG,EAAE;IAEL,yEAAyE;IACzE,IAAI,CAAC,SAAS;QACZ,qBAAO,8OAAC;YAAI,WAAU;;;;;;IACxB;IAEA,wDAAwD;IACxD,IAAI,CAAC,SAAS,UAAU,CAAC,UAAU;QACjC,qBAAO,8OAAC,oJAAA,CAAA,UAAe;sBAAE;;;;;;IAC3B;IAEA,qBAAO;kBAAG;;AACZ","debugId":null}}]
}