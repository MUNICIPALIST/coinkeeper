{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/miraskarasbekov/Desktop/CoinKeeperNew/coinkeeper/src/app/dashboard/page.tsx"],"sourcesContent":["'use client';\n\nimport { Box, Typography, Paper, IconButton } from '@mui/material';\nimport { useState } from 'react';\nimport RefreshIcon from '@mui/icons-material/Refresh';\nimport DashboardLayout from '@/components/layouts/dashboard-layout';\nimport { useLanguage } from '@/providers/language-provider';\n\nexport default function DashboardPage() {\n  const { t } = useLanguage();\n  const [balance, setBalance] = useState(1000);\n  const [income, setIncome] = useState(2500);\n  const [expenses, setExpenses] = useState(1500);\n  const [isRefreshing, setIsRefreshing] = useState(false);\n\n  const handleRefresh = () => {\n    setIsRefreshing(true);\n    \n    // Simulate API delay\n    setTimeout(() => {\n      // Generate random new values to simulate data refresh\n      const newIncome = Math.floor(Math.random() * 5000) + 1000;\n      const newExpenses = Math.floor(Math.random() * 3000) + 500;\n      const newBalance = newIncome - newExpenses;\n      \n      setIncome(newIncome);\n      setExpenses(newExpenses);\n      setBalance(newBalance);\n      setIsRefreshing(false);\n    }, 1000);\n  };\n\n  return (\n    <DashboardLayout>\n      <Box className=\"content-container\" sx={{ py: 3 }}>\n        <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }} className=\"welcome-section\">\n          <Box className=\"page-title-container\">\n            <Typography variant=\"h4\" className=\"welcome-title\">\n              {t('dashboard.welcome_back')}\n            </Typography>\n            <Typography variant=\"subtitle1\" sx={{ mt: 1, opacity: 0.7 }}>\n              {t('dashboard.financial_overview')}\n            </Typography>\n          </Box>\n          <IconButton \n            onClick={handleRefresh} \n            aria-label=\"refresh data\" \n            className={`refresh-button ${isRefreshing ? 'rotating' : ''}`}\n            disabled={isRefreshing}\n          >\n            <RefreshIcon />\n          </IconButton>\n        </Box>\n        \n        <Box sx={{ display: 'grid', gridTemplateColumns: { xs: '1fr', md: 'repeat(3, 1fr)' }, gap: 3 }}>\n          <Paper className=\"dashboard-card balance-card\">\n            <Typography variant=\"h6\">{t('dashboard.total_balance')}</Typography>\n            <Typography variant=\"h4\">${balance.toLocaleString()}</Typography>\n          </Paper>\n\n          <Paper className=\"dashboard-card income-card\">\n            <Typography variant=\"h6\">{t('dashboard.income')}</Typography>\n            <Typography variant=\"h4\">${income.toLocaleString()}</Typography>\n          </Paper>\n\n          <Paper className=\"dashboard-card expense-card\">\n            <Typography variant=\"h6\">{t('dashboard.expenses')}</Typography>\n            <Typography variant=\"h4\">${expenses.toLocaleString()}</Typography>\n          </Paper>\n        </Box>\n\n        <Box sx={{ mt: 4 }}>\n          <Paper className=\"overview-card\">\n            <Typography variant=\"h6\" className=\"section-header\">{t('dashboard.spending_overview')}</Typography>\n            <Box className=\"chart-container\">\n              <Typography variant=\"body2\" className=\"chart-placeholder\">\n                {t('dashboard.spending_patterns')}\n              </Typography>\n            </Box>\n          </Paper>\n        </Box>\n\n        <Box>\n          <Paper className=\"overview-card\">\n            <Typography variant=\"h6\" className=\"section-header\">{t('dashboard.recent_transactions')}</Typography>\n            <Box className=\"transactions-list\">\n              <Typography variant=\"body2\" className=\"transactions-placeholder\">\n                {t('dashboard.transactions_appear')}\n              </Typography>\n            </Box>\n          </Paper>\n        </Box>\n      </Box>\n    </DashboardLayout>\n  );\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 323, "column": 0}, "map": {"version":3,"sources":["file:///Users/miraskarasbekov/Desktop/CoinKeeperNew/coinkeeper/node_modules/%40mui/icons-material/esm/Refresh.js"],"sourcesContent":["\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M17.65 6.35C16.2 4.9 14.21 4 12 4c-4.42 0-7.99 3.58-7.99 8s3.57 8 7.99 8c3.73 0 6.84-2.55 7.73-6h-2.08c-.82 2.33-3.04 4-5.65 4-3.31 0-6-2.69-6-6s2.69-6 6-6c1.66 0 3.14.69 4.22 1.78L13 11h7V4z\"\n}), 'Refresh');"],"names":[],"mappings":";;;AAEA;AACA;AAHA;;;uCAIe,CAAA,GAAA,kKAAA,CAAA,UAAa,AAAD,EAAE,WAAW,GAAE,CAAA,GAAA,uNAAA,CAAA,MAAI,AAAD,EAAE,QAAQ;IACrD,GAAG;AACL,IAAI","ignoreList":[0],"debugId":null}}]
}