{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/miraskarasbekov/Desktop/CoinKeeperNew/coinkeeper/src/app/budgets/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { useSession } from 'next-auth/react';\nimport { useLanguage } from '@/providers/language-provider';\nimport DashboardLayout from '@/components/layouts/dashboard-layout';\nimport {\n  Box,\n  Button,\n  Paper,\n  Typography,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  TextField,\n  MenuItem,\n  IconButton,\n  CircularProgress,\n  Grid,\n  LinearProgress,\n  Chip,\n} from '@mui/material';\nimport {\n  Add as AddIcon,\n  Edit as EditIcon,\n  Delete as DeleteIcon,\n} from '@mui/icons-material';\n\ninterface Budget {\n  id: number;\n  name: string;\n  amount: number;\n  spent: number;\n  period: 'monthly' | 'yearly';\n  categoryId: number;\n  category: {\n    name: string;\n    color: string;\n  };\n}\n\ninterface Category {\n  id: number;\n  name: string;\n  type: 'expense';\n  color: string;\n}\n\nexport default function BudgetsPage() {\n  const { data: session } = useSession();\n  const { t } = useLanguage();\n  const [budgets, setBudgets] = useState<Budget[]>([]);\n  const [categories, setCategories] = useState<Category[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [openDialog, setOpenDialog] = useState(false);\n  const [editingBudget, setEditingBudget] = useState<Budget | null>(null);\n  const [formData, setFormData] = useState({\n    name: '',\n    amount: '',\n    period: 'monthly',\n    categoryId: '',\n  });\n\n  const periods = [\n    { value: 'monthly', label: t('monthly') },\n    { value: 'yearly', label: t('yearly') },\n  ];\n\n  useEffect(() => {\n    fetchBudgets();\n    fetchCategories();\n  }, []);\n\n  const fetchBudgets = async () => {\n    try {\n      const response = await fetch('/api/budgets');\n      const data = await response.json();\n      setBudgets(data);\n    } catch (error) {\n      console.error('Error fetching budgets:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const fetchCategories = async () => {\n    try {\n      const response = await fetch('/api/categories');\n      const data = await response.json();\n      // Filter only expense categories\n      setCategories(data.filter((cat: Category) => cat.type === 'expense'));\n    } catch (error) {\n      console.error('Error fetching categories:', error);\n    }\n  };\n\n  const handleOpenDialog = (budget?: Budget) => {\n    if (budget) {\n      setEditingBudget(budget);\n      setFormData({\n        name: budget.name,\n        amount: budget.amount.toString(),\n        period: budget.period,\n        categoryId: budget.categoryId.toString(),\n      });\n    } else {\n      setEditingBudget(null);\n      setFormData({\n        name: '',\n        amount: '',\n        period: 'monthly',\n        categoryId: '',\n      });\n    }\n    setOpenDialog(true);\n  };\n\n  const handleCloseDialog = () => {\n    setOpenDialog(false);\n    setEditingBudget(null);\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    try {\n      const response = await fetch('/api/budgets', {\n        method: editingBudget ? 'PUT' : 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          ...(editingBudget && { id: editingBudget.id }),\n          name: formData.name,\n          amount: parseFloat(formData.amount),\n          period: formData.period,\n          categoryId: parseInt(formData.categoryId),\n        }),\n      });\n\n      if (response.ok) {\n        handleCloseDialog();\n        fetchBudgets();\n      }\n    } catch (error) {\n      console.error('Error saving budget:', error);\n    }\n  };\n\n  const handleDelete = async (id: number) => {\n    if (window.confirm(t('confirmation_delete'))) {\n      try {\n        const response = await fetch(`/api/budgets/${id}`, {\n          method: 'DELETE',\n        });\n\n        if (response.ok) {\n          fetchBudgets();\n        }\n      } catch (error) {\n        console.error('Error deleting budget:', error);\n      }\n    }\n  };\n\n  const calculateProgress = (spent: number, amount: number) => {\n    return (spent / amount) * 100;\n  };\n\n  const getProgressColor = (progress: number) => {\n    if (progress >= 100) return 'error';\n    if (progress >= 80) return 'warning';\n    return 'success';\n  };\n\n  if (loading) {\n    return (\n      <DashboardLayout>\n        <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" minHeight=\"80vh\">\n          <CircularProgress />\n        </Box>\n      </DashboardLayout>\n    );\n  }\n\n  return (\n    <DashboardLayout>\n      <Box className=\"content-container\" sx={{ py: 3 }}>\n        <Box className=\"page-title-container\">\n          <Typography variant=\"h4\">{t('budgets.title')}</Typography>\n          <Button\n            variant=\"contained\"\n            startIcon={<AddIcon />}\n            onClick={() => handleOpenDialog()}\n            className=\"add-button\"\n          >\n            {t('add_budget')}\n          </Button>\n        </Box>\n\n        <Box className=\"budgets-grid\">\n          {budgets.map((budget) => {\n            const progress = calculateProgress(budget.spent, budget.amount);\n            const progressColor = getProgressColor(progress);\n\n            return (\n              <Paper className=\"budget-card\" key={budget.id}>\n                <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"flex-start\">\n                  <Box>\n                    <Typography variant=\"h6\">{budget.name}</Typography>\n                    <Box display=\"flex\" alignItems=\"center\" mb={1} className=\"budget-category-indicator\">\n                      <Box\n                        className=\"budget-category-dot\"\n                        sx={{\n                          backgroundColor: budget.category.color,\n                        }}\n                      />\n                      <Typography variant=\"body2\" className=\"budget-category-name\">\n                        {budget.category.name}\n                      </Typography>\n                    </Box>\n                  </Box>\n                  <Box className=\"budget-actions\">\n                    <IconButton onClick={() => handleOpenDialog(budget)} size=\"small\">\n                      <EditIcon />\n                    </IconButton>\n                    <IconButton onClick={() => handleDelete(budget.id)} size=\"small\" color=\"error\">\n                      <DeleteIcon />\n                    </IconButton>\n                  </Box>\n                </Box>\n\n                <Box className=\"budget-info\">\n                  <Box className=\"budget-info-item\">\n                    <Typography className=\"budget-info-label\">{t('budgets.spent')}</Typography>\n                    <Typography className=\"budget-info-value spent\">\n                      ${budget.spent.toFixed(2)}\n                    </Typography>\n                  </Box>\n                  <Box className=\"budget-info-progress\" sx={{\n                    color: progressColor === 'success' ? '#2e7d32' : \n                           progressColor === 'warning' ? '#ed6c02' : '#d32f2f'\n                  }}>\n                    {Math.round(progress)}%\n                  </Box>\n                  <Box className=\"budget-info-item\" sx={{ textAlign: 'right' }}>\n                    <Typography className=\"budget-info-label\">{t('budgets.budget')}</Typography>\n                    <Typography className=\"budget-info-value budget\">\n                      ${budget.amount.toFixed(2)}\n                    </Typography>\n                  </Box>\n                </Box>\n\n                <Box className=\"budget-period\">\n                  <Chip\n                    label={t(budget.period)}\n                    variant=\"outlined\"\n                    size=\"small\"\n                    sx={{ borderRadius: '4px' }}\n                  />\n                </Box>\n\n                <LinearProgress\n                  className=\"budget-progress-bar\"\n                  variant=\"determinate\"\n                  value={Math.min(progress, 100)}\n                  color={progressColor}\n                  sx={{ height: 8, borderRadius: 4 }}\n                />\n              </Paper>\n            );\n          })}\n        </Box>\n\n        <Dialog open={openDialog} onClose={handleCloseDialog} fullWidth maxWidth=\"sm\">\n          <DialogTitle>\n            {editingBudget ? t('budgets.edit_budget') : t('add_budget')}\n          </DialogTitle>\n          <DialogContent>\n            <TextField\n              margin=\"dense\"\n              label={t('budget_name')}\n              type=\"text\"\n              fullWidth\n              value={formData.name}\n              onChange={(e) => setFormData({ ...formData, name: e.target.value })}\n              required\n              sx={{ mb: 2 }}\n            />\n            <TextField\n              margin=\"dense\"\n              label={t('amount')}\n              type=\"number\"\n              fullWidth\n              value={formData.amount}\n              onChange={(e) => setFormData({ ...formData, amount: e.target.value })}\n              required\n              sx={{ mb: 2 }}\n            />\n            <TextField\n              select\n              margin=\"dense\"\n              label={t('period')}\n              fullWidth\n              value={formData.period}\n              onChange={(e) => setFormData({ ...formData, period: e.target.value })}\n              required\n              sx={{ mb: 2 }}\n            >\n              {periods.map((option) => (\n                <MenuItem key={option.value} value={option.value}>\n                  {option.label}\n                </MenuItem>\n              ))}\n            </TextField>\n            <TextField\n              select\n              margin=\"dense\"\n              label={t('category')}\n              fullWidth\n              value={formData.categoryId}\n              onChange={(e) => setFormData({ ...formData, categoryId: e.target.value })}\n              required\n            >\n              {categories.map((category) => (\n                <MenuItem key={category.id} value={category.id.toString()}>\n                  {category.name}\n                </MenuItem>\n              ))}\n            </TextField>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleCloseDialog} color=\"primary\">\n              {t('cancel')}\n            </Button>\n            <Button onClick={handleSubmit} color=\"primary\" variant=\"contained\">\n              {editingBudget ? t('save') : t('add')}\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </Box>\n    </DashboardLayout>\n  );\n} "],"names":[],"mappings":"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","debugId":null}}]
}