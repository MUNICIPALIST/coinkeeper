{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/miraskarasbekov/Desktop/CoinKeeperNew/coinkeeper/src/providers/auth-provider.tsx"],"sourcesContent":["'use client';\n\nimport { SessionProvider } from \"next-auth/react\";\n\nexport function AuthProvider({ children }: { children: React.ReactNode }) {\n  return <SessionProvider>{children}</SessionProvider>;\n} "],"names":[],"mappings":";;;;AAEA;AAFA;;;AAIO,SAAS,aAAa,EAAE,QAAQ,EAAiC;IACtE,qBAAO,6LAAC,iJAAA,CAAA,kBAAe;kBAAE;;;;;;AAC3B;KAFgB","debugId":null}},
    {"offset": {"line": 36, "column": 0}, "map": {"version":3,"sources":["file:///Users/miraskarasbekov/Desktop/CoinKeeperNew/coinkeeper/src/providers/language-provider.tsx"],"sourcesContent":["'use client';\n\nimport { createContext, useContext, useEffect, useState, ReactNode } from 'react';\n\ntype Language = 'en' | 'ru' | 'kk';\n\n// Обновленный тип для поддержки вложенных переводов\ntype TranslationValue = string | { [key: string]: TranslationValue };\ntype TranslationRecord = Record<string, TranslationValue>;\n\ninterface LanguageContextProps {\n  language: Language;\n  setLanguage: (language: Language) => void;\n  t: (key: string) => string;\n  isClientReady: boolean;\n}\n\n// Create context with default values to prevent errors during initialization\nconst defaultContextValue: LanguageContextProps = {\n  language: 'en',\n  setLanguage: () => {},\n  t: (key: string) => key,\n  isClientReady: false\n};\n\nconst LanguageContext = createContext<LanguageContextProps>(defaultContextValue);\n\n// Translations dictionary - make sure to EXACTLY match capitalization for SSR/CSR consistency\nconst translations: Record<Language, TranslationRecord> = {\n  en: {\n    'dashboard': 'Dashboard',\n    'accounts': 'Accounts',\n    'transactions': 'Transactions',\n    'categories': 'Categories',\n    'budgets': 'Budgets',\n    'goals': 'Goals',\n    'reports': 'Reports',\n    'settings': {\n      title: 'Settings',\n      appearance: {\n        title: 'Appearance',\n        theme: 'Theme',\n        light: 'Light',\n        dark: 'Dark',\n        system: 'System'\n      },\n      currency: {\n        title: 'Currency',\n        default: 'Default Currency'\n      },\n      language: {\n        title: 'Language & Format',\n        select: 'Language',\n        dateFormat: 'Date Format'\n      },\n      notifications: {\n        title: 'Notifications',\n        enable: 'Enable Budget Notifications'\n      },\n      security: {\n        title: 'Security',\n        passwordDesc: 'Change your account password. It is recommended to use a strong password.',\n        currentPassword: 'Current Password',\n        newPassword: 'New Password',\n        confirmPassword: 'Confirm Password',\n        changePassword: 'Change Password',\n        passwordSuccess: 'Password successfully updated!'\n      },\n      saveButton: 'Save Settings',\n      saveSuccess: 'Settings saved successfully!'\n    },\n    'welcome': 'Welcome',\n    'logout': 'Logout',\n    'add_budget': 'Add Budget',\n    'budget_name': 'Budget Name',\n    'amount': 'Amount',\n    'period': 'Period',\n    'category': 'Category',\n    'monthly': 'Monthly',\n    'yearly': 'Yearly',\n    'cancel': 'Cancel',\n    'add': 'Add',\n    'save': 'Save',\n    'edit': 'Edit',\n    'save_settings': 'Save Settings',\n    'change_password': 'Change Password',\n    'current_password': 'Current Password',\n    'new_password': 'New Password',\n    'confirm_password': 'Confirm Password',\n    'update_password': 'Update Password',\n    'appearance': 'Appearance',\n    'theme': 'Theme',\n    'light': 'Light',\n    'dark': 'Dark',\n    'system': 'Use system settings',\n    'currency': 'Currency',\n    'default_currency': 'Default Currency',\n    'language_and_format': 'Language and Format',\n    'language': 'Language',\n    'date_format': 'Date Format',\n    'notifications': 'Notifications',\n    'enable_budget_notifications': 'Enable budget notifications',\n    // Goal page translations\n    'goal_name': 'Goal Name',\n    'target_amount': 'Target Amount ($)',\n    'current_amount': 'Current Amount ($)',\n    'deadline': 'Deadline',\n    'description': 'Description (Optional)',\n    'add_goal': 'Add Goal',\n    'edit_goal': 'Edit Goal',\n    'delete_goal': 'Delete Goal',\n    'no_goals': 'No goals created yet. Click \"Add Goal\" to get started.',\n    'confirmation_delete': 'Are you sure you want to delete this goal?',\n  },\n  ru: {\n    'dashboard': 'Панель управления',\n    'accounts': 'Счета',\n    'transactions': 'Транзакции',\n    'categories': 'Категории',\n    'budgets': 'Бюджеты',\n    'goals': 'Цели',\n    'reports': 'Отчеты',\n    'settings': {\n      title: 'Настройки',\n      appearance: {\n        title: 'Внешний вид',\n        theme: 'Тема',\n        light: 'Светлая',\n        dark: 'Темная',\n        system: 'Системная'\n      },\n      currency: {\n        title: 'Валюта',\n        default: 'Основная валюта'\n      },\n      language: {\n        title: 'Язык и формат',\n        select: 'Язык',\n        dateFormat: 'Формат даты'\n      },\n      notifications: {\n        title: 'Уведомления',\n        enable: 'Включить уведомления о бюджете'\n      },\n      security: {\n        title: 'Безопасность',\n        passwordDesc: 'Смена пароля учетной записи. Рекомендуется использовать надежный пароль.',\n        currentPassword: 'Текущий пароль',\n        newPassword: 'Новый пароль',\n        confirmPassword: 'Подтвердите пароль',\n        changePassword: 'Сменить пароль',\n        passwordSuccess: 'Пароль успешно обновлен!'\n      },\n      saveButton: 'Сохранить настройки',\n      saveSuccess: 'Настройки успешно сохранены!'\n    },\n    'welcome': 'Добро пожаловать',\n    'logout': 'Выход',\n    'add_budget': 'Добавить бюджет',\n    'budget_name': 'Название бюджета',\n    'amount': 'Сумма',\n    'period': 'Период',\n    'category': 'Категория',\n    'monthly': 'Ежемесячно',\n    'yearly': 'Ежегодно',\n    'cancel': 'Отмена',\n    'add': 'Добавить',\n    'save': 'Сохранить',\n    'edit': 'Изменить',\n    'save_settings': 'Сохранить настройки',\n    'change_password': 'Изменить пароль',\n    'current_password': 'Текущий пароль',\n    'new_password': 'Новый пароль',\n    'confirm_password': 'Подтвердите пароль',\n    'update_password': 'Обновить пароль',\n    'appearance': 'Внешний вид',\n    'theme': 'Тема',\n    'light': 'Светлая',\n    'dark': 'Темная',\n    'system': 'Использовать настройки системы',\n    'currency': 'Валюта',\n    'default_currency': 'Валюта по умолчанию',\n    'language_and_format': 'Язык и формат',\n    'language': 'Язык',\n    'date_format': 'Формат даты',\n    'notifications': 'Уведомления',\n    'enable_budget_notifications': 'Включить уведомления о бюджете',\n    // Goal page translations\n    'goal_name': 'Название цели',\n    'target_amount': 'Целевая сумма (₽)',\n    'current_amount': 'Текущая сумма (₽)',\n    'deadline': 'Срок',\n    'description': 'Описание (Необязательно)',\n    'add_goal': 'Добавить цель',\n    'edit_goal': 'Изменить цель',\n    'delete_goal': 'Удалить цель',\n    'no_goals': 'У вас пока нет целей. Нажмите \"Добавить цель\", чтобы начать.',\n    'confirmation_delete': 'Вы уверены, что хотите удалить эту цель?',\n  },\n  kk: {\n    'dashboard': 'Басқару панелі',\n    'accounts': 'Шоттар',\n    'transactions': 'Транзакциялар',\n    'categories': 'Санаттар',\n    'budgets': 'Бюджеттер',\n    'goals': 'Мақсаттар',\n    'reports': 'Есептер',\n    'settings': {\n      title: 'Параметрлер',\n      appearance: {\n        title: 'Сыртқы түрі',\n        theme: 'Тақырып',\n        light: 'Жарық',\n        dark: 'Қараңғы',\n        system: 'Жүйе параметрлері'\n      },\n      currency: {\n        title: 'Валюта',\n        default: 'Негізгі валюта'\n      },\n      language: {\n        title: 'Тіл және пішім',\n        select: 'Тіл',\n        dateFormat: 'Күн пішімі'\n      },\n      notifications: {\n        title: 'Хабарландырулар',\n        enable: 'Бюджет хабарландыруларын қосу'\n      },\n      security: {\n        title: 'Қауіпсіздік',\n        passwordDesc: 'Аккаунт құпиясөзін өзгерту. Күрделі құпиясөз қолдануды ұсынамыз.',\n        currentPassword: 'Ағымдағы құпиясөз',\n        newPassword: 'Жаңа құпиясөз',\n        confirmPassword: 'Құпиясөзді растаңыз',\n        changePassword: 'Құпиясөзді өзгерту',\n        passwordSuccess: 'Құпия сөз сәтті жаңартылды!'\n      },\n      saveButton: 'Параметрлерді сақтау',\n      saveSuccess: 'Параметрлер сәтті сақталды!'\n    },\n    'welcome': 'Қош келдіңіз',\n    'logout': 'Шығу',\n    'add_budget': 'Бюджет қосу',\n    'budget_name': 'Бюджет атауы',\n    'amount': 'Сома',\n    'period': 'Кезең',\n    'category': 'Санат',\n    'monthly': 'Ай сайын',\n    'yearly': 'Жыл сайын',\n    'cancel': 'Бас тарту',\n    'add': 'Қосу',\n    'save': 'Сақтау',\n    'edit': 'Өңдеу',\n    'save_settings': 'Параметрлерді сақтау',\n    'change_password': 'Құпия сөзді өзгерту',\n    'current_password': 'Ағымдағы құпия сөз',\n    'new_password': 'Жаңа құпия сөз',\n    'confirm_password': 'Құпия сөзді растаңыз',\n    'update_password': 'Құпия сөзді жаңарту',\n    'appearance': 'Сыртқы түрі',\n    'theme': 'Тақырып',\n    'light': 'Жарық',\n    'dark': 'Қараңғы',\n    'system': 'Жүйе параметрлерін пайдалану',\n    'currency': 'Валюта',\n    'default_currency': 'Әдепкі валюта',\n    'language_and_format': 'Тіл және пішім',\n    'language': 'Тіл',\n    'date_format': 'Күн пішімі',\n    'notifications': 'Хабарландырулар',\n    'enable_budget_notifications': 'Бюджет хабарландыруларын қосу',\n    // Goal page translations\n    'goal_name': 'Мақсат атауы',\n    'target_amount': 'Мақсатты сома (₸)',\n    'current_amount': 'Ағымдағы сома (₸)',\n    'deadline': 'Мерзімі',\n    'description': 'Сипаттама (Міндетті емес)',\n    'add_goal': 'Мақсат қосу',\n    'edit_goal': 'Мақсатты өңдеу',\n    'delete_goal': 'Мақсатты жою',\n    'no_goals': 'Сізде әлі мақсаттар жоқ. Бастау үшін \"Мақсат қосу\" түймесін басыңыз.',\n    'confirmation_delete': 'Бұл мақсатты шынымен жойғыңыз келе ме?',\n  }\n};\n\nexport function LanguageProvider({ children }: { children: ReactNode }) {\n  const [language, setLanguage] = useState<Language>('en');\n  const [isClientReady, setIsClientReady] = useState(false);\n\n  useEffect(() => {\n    // Get saved language or detect browser language\n    const savedLanguage = localStorage.getItem('language') as Language;\n    if (savedLanguage && ['en', 'ru', 'kk'].includes(savedLanguage)) {\n      setLanguage(savedLanguage);\n    } else {\n      // Default to browser language or 'en'\n      const browserLang = navigator.language.split('-')[0];\n      if (['en', 'ru', 'kk'].includes(browserLang as Language)) {\n        setLanguage(browserLang as Language);\n      }\n    }\n    \n    // Mark client as ready for rendering\n    setIsClientReady(true);\n    \n    // Apply language to HTML tag\n    document.documentElement.lang = language;\n  }, []);\n\n  // Update language when it changes\n  useEffect(() => {\n    if (isClientReady) {\n      localStorage.setItem('language', language);\n      document.documentElement.lang = language;\n    }\n  }, [language, isClientReady]);\n\n  const applyLanguage = (selectedLanguage: Language) => {\n    if (typeof document === 'undefined') return;\n    document.documentElement.lang = selectedLanguage;\n  };\n\n  const setLanguageValue = (newLanguage: Language) => {\n    localStorage.setItem('language', newLanguage);\n    setLanguage(newLanguage);\n    applyLanguage(newLanguage);\n  };\n\n  // Обновленная функция для получения перевода, поддерживающая вложенные объекты\n  const t = (key: string): string => {\n    if (!key) return '';\n    \n    // Get translations for current language or fallback to English\n    const currentTranslations = translations[language] || translations.en;\n    \n    // Handle nested keys like 'settings.appearance.theme'\n    if (key.includes('.')) {\n      const keys = key.split('.');\n      let result: any = currentTranslations;\n      \n      // Navigate through the nested objects\n      for (const k of keys) {\n        if (result && typeof result === 'object' && k in result) {\n          result = result[k];\n        } else {\n          return key; // Key path not found\n        }\n      }\n      \n      return typeof result === 'string' ? result : key;\n    }\n    \n    // Handle regular keys\n    const translation = currentTranslations[key];\n    if (typeof translation === 'string') {\n      return translation;\n    }\n    \n    // If not found, try English or return the key itself\n    const enTranslation = translations.en[key];\n    return typeof enTranslation === 'string' ? enTranslation : key;\n  };\n\n  return (\n    <LanguageContext.Provider value={{ language, setLanguage: setLanguageValue, t, isClientReady }}>\n      {children}\n    </LanguageContext.Provider>\n  );\n}\n\nexport function useLanguage() {\n  const context = useContext(LanguageContext);\n  if (!context) {\n    throw new Error('useLanguage must be used within a LanguageProvider');\n  }\n  return context;\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 428, "column": 0}, "map": {"version":3,"sources":["file:///Users/miraskarasbekov/Desktop/CoinKeeperNew/coinkeeper/src/providers/providers.tsx"],"sourcesContent":["'use client';\n\nimport { SessionProvider } from 'next-auth/react';\nimport { AuthProvider } from './auth-provider';\nimport { LanguageProvider } from './language-provider';\nimport { useEffect } from 'react';\n\nexport default function Providers({ children }: { children: React.ReactNode }) {\n  // Add a useEffect to log when providers are mounted - helps with debugging\n  useEffect(() => {\n    console.log('Providers mounted');\n    \n    // Force a refresh of the styles on client side\n    const root = document.documentElement;\n    const currentTheme = localStorage.getItem('theme');\n    if (currentTheme) {\n      console.log('Initializing theme from localStorage:', currentTheme);\n    }\n\n    // Check authentication status on mount\n    const checkAuth = async () => {\n      try {\n        const response = await fetch('/api/auth/session');\n        const session = await response.json();\n        console.log('Initial auth check:', session);\n      } catch (error) {\n        console.error('Error checking auth status:', error);\n      }\n    };\n\n    checkAuth();\n  }, []);\n\n  return (\n    <SessionProvider refetchInterval={5 * 60} refetchOnWindowFocus={true}>\n      <AuthProvider>\n        <LanguageProvider>\n          {children}\n        </LanguageProvider>\n      </AuthProvider>\n    </SessionProvider>\n  );\n} "],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;;;AALA;;;;;AAOe,SAAS,UAAU,EAAE,QAAQ,EAAiC;;IAC3E,2EAA2E;IAC3E,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;+BAAE;YACR,QAAQ,GAAG,CAAC;YAEZ,+CAA+C;YAC/C,MAAM,OAAO,SAAS,eAAe;YACrC,MAAM,eAAe,aAAa,OAAO,CAAC;YAC1C,IAAI,cAAc;gBAChB,QAAQ,GAAG,CAAC,yCAAyC;YACvD;YAEA,uCAAuC;YACvC,MAAM;iDAAY;oBAChB,IAAI;wBACF,MAAM,WAAW,MAAM,MAAM;wBAC7B,MAAM,UAAU,MAAM,SAAS,IAAI;wBACnC,QAAQ,GAAG,CAAC,uBAAuB;oBACrC,EAAE,OAAO,OAAO;wBACd,QAAQ,KAAK,CAAC,+BAA+B;oBAC/C;gBACF;;YAEA;QACF;8BAAG,EAAE;IAEL,qBACE,6LAAC,iJAAA,CAAA,kBAAe;QAAC,iBAAiB,IAAI;QAAI,sBAAsB;kBAC9D,cAAA,6LAAC,wIAAA,CAAA,eAAY;sBACX,cAAA,6LAAC,4IAAA,CAAA,mBAAgB;0BACd;;;;;;;;;;;;;;;;AAKX;GAnCwB;KAAA","debugId":null}},
    {"offset": {"line": 505, "column": 0}, "map": {"version":3,"sources":["file:///Users/miraskarasbekov/Desktop/CoinKeeperNew/coinkeeper/src/providers/theme-provider.tsx"],"sourcesContent":["'use client';\n\nimport { ThemeProvider as MUIThemeProvider, createTheme } from '@mui/material';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport { createContext, useEffect, useState, useContext } from 'react';\n\ntype Theme = 'light' | 'dark' | 'system';\n\ninterface ThemeContextProps {\n  theme: Theme;\n  setTheme: (theme: Theme) => void;\n}\n\n// Create the context with a default value\nconst defaultThemeContext: ThemeContextProps = {\n  theme: 'system',\n  setTheme: () => console.warn('Theme context not initialized')\n};\n\nconst ThemeContext = createContext<ThemeContextProps>(defaultThemeContext);\n\n// Exports the context for direct use if needed\nexport { ThemeContext };\n\nexport function ThemeProvider({ children }: { children: React.ReactNode }) {\n  const [theme, setTheme] = useState<Theme>('light');\n  const [mounted, setMounted] = useState(false);\n  const [mode, setMode] = useState<'light' | 'dark'>('light');\n\n  // Initial setup effect - runs only once\n  useEffect(() => {\n    // Set mounted to true when component mounts\n    setMounted(true);\n    \n    // Load theme from localStorage if available\n    const savedTheme = localStorage.getItem('theme') as Theme;\n    if (savedTheme) {\n      setTheme(savedTheme);\n      applyTheme(savedTheme);\n    } else {\n      // Default to system preference\n      setTheme('system');\n      applyTheme('system');\n    }\n\n    // Add an event listener for system preference changes\n    const mediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\n    const handleChange = () => {\n      if (theme === 'system') {\n        applyTheme('system');\n      }\n    };\n\n    mediaQuery.addEventListener('change', handleChange);\n    return () => mediaQuery.removeEventListener('change', handleChange);\n  }, []); // Empty dependency array so this only runs once\n\n  // Effect to apply theme changes\n  useEffect(() => {\n    if (mounted) {\n      console.log('Theme changed to:', theme);\n      applyTheme(theme);\n    }\n  }, [theme, mounted]);\n\n  const applyTheme = (selectedTheme: Theme) => {\n    if (typeof document === 'undefined') return; // Skip during SSR\n    \n    console.log('Applying theme:', selectedTheme);\n    const root = document.documentElement;\n    \n    // Remove existing theme classes\n    root.classList.remove('dark-theme', 'light-theme', 'system-theme');\n    \n    let newMode: 'light' | 'dark' = 'light';\n    \n    if (selectedTheme === 'dark') {\n      root.classList.add('dark-theme');\n      newMode = 'dark';\n      document.body.setAttribute('data-theme', 'dark');\n    } else if (selectedTheme === 'light') {\n      root.classList.add('light-theme');\n      newMode = 'light';\n      document.body.setAttribute('data-theme', 'light');\n    } else if (selectedTheme === 'system') {\n      // Check system preference\n      const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;\n      if (prefersDark) {\n        root.classList.add('dark-theme');\n        newMode = 'dark';\n        document.body.setAttribute('data-theme', 'dark');\n      } else {\n        root.classList.add('light-theme');\n        newMode = 'light';\n        document.body.setAttribute('data-theme', 'light');\n      }\n      root.classList.add('system-theme');\n    }\n    \n    setMode(newMode);\n  };\n\n  const setThemeValue = (newTheme: Theme) => {\n    console.log('Setting theme to:', newTheme);\n    \n    // First update localStorage\n    localStorage.setItem('theme', newTheme);\n    \n    // Then update the state\n    setTheme(newTheme);\n    \n    // Force DOM updates in case of issues with state synchronization\n    document.documentElement.dataset.themeLoading = 'true';\n    setTimeout(() => {\n      applyTheme(newTheme);\n      document.documentElement.dataset.themeLoading = 'false';\n    }, 0);\n  };\n\n  // Create MUI theme based on current mode\n  const muiTheme = createTheme({\n    palette: {\n      mode: mode,\n      primary: {\n        main: mode === 'light' ? '#1976d2' : '#90caf9',\n      },\n      secondary: {\n        main: mode === 'light' ? '#dc004e' : '#f48fb1',\n      },\n      background: {\n        default: mode === 'light' ? '#ffffff' : '#121212',\n        paper: mode === 'light' ? '#ffffff' : '#1e1e1e',\n      },\n      text: {\n        primary: mode === 'light' ? 'rgba(0, 0, 0, 0.87)' : 'rgba(255, 255, 255, 0.87)',\n        secondary: mode === 'light' ? 'rgba(0, 0, 0, 0.6)' : 'rgba(255, 255, 255, 0.6)',\n      },\n    },\n    components: {\n      MuiCssBaseline: {\n        styleOverrides: {\n          body: {\n            backgroundColor: mode === 'light' ? '#ffffff' : '#121212',\n            color: mode === 'light' ? 'rgba(0, 0, 0, 0.87)' : 'rgba(255, 255, 255, 0.87)',\n            transition: 'background-color 0.3s, color 0.3s',\n          },\n          '& #__next': {\n            backgroundColor: mode === 'light' ? '#ffffff' : '#121212',\n            minHeight: '100vh',\n          },\n        },\n      },\n      MuiPaper: {\n        styleOverrides: {\n          root: {\n            backgroundColor: mode === 'light' ? '#ffffff' : '#1e1e1e',\n          },\n        },\n      },\n      MuiDrawer: {\n        defaultProps: {\n          PaperProps: {\n            style: {\n              backgroundColor: mode === 'light' ? '#f0f0f0' : '#1e1e1e',\n              borderRight: mode === 'light' \n                ? '1px solid rgba(0, 0, 0, 0.08)' \n                : '1px solid rgba(255, 255, 255, 0.08)',\n            }\n          }\n        },\n        styleOverrides: {\n          root: {\n            \"& .MuiDrawer-paper\": {\n              backgroundColor: mode === 'light' ? '#f0f0f0' : '#1e1e1e',\n              borderRight: mode === 'light' \n                ? '1px solid rgba(0, 0, 0, 0.08)' \n                : '1px solid rgba(255, 255, 255, 0.08)',\n            }\n          },\n          paper: {\n            backgroundColor: mode === 'light' ? '#f0f0f0' : '#1e1e1e',\n            borderRight: mode === 'light' \n              ? '1px solid rgba(0, 0, 0, 0.08)' \n              : '1px solid rgba(255, 255, 255, 0.08)',\n          },\n        },\n      },\n    },\n  });\n\n  // Prevent flash of unstyled content\n  if (!mounted) {\n    return <>{children}</>;\n  }\n\n  return (\n    <ThemeContext.Provider value={{ theme, setTheme: setThemeValue }}>\n      <MUIThemeProvider theme={muiTheme}>\n        <CssBaseline />\n        {children}\n      </MUIThemeProvider>\n    </ThemeContext.Provider>\n  );\n}\n\n// Custom hook for using the theme context\nexport function useTheme() {\n  // Context now always has a value due to default context\n  return useContext(ThemeContext);\n} "],"names":[],"mappings":";;;;;;AAEA;AAAA;AACA;AACA;;;AAJA;;;;AAaA,0CAA0C;AAC1C,MAAM,sBAAyC;IAC7C,OAAO;IACP,UAAU,IAAM,QAAQ,IAAI,CAAC;AAC/B;AAEA,MAAM,6BAAe,CAAA,GAAA,6JAAA,CAAA,gBAAa,AAAD,EAAqB;;AAK/C,SAAS,cAAc,EAAE,QAAQ,EAAiC;;IACvE,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAS;IAC1C,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAoB;IAEnD,wCAAwC;IACxC,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;mCAAE;YACR,4CAA4C;YAC5C,WAAW;YAEX,4CAA4C;YAC5C,MAAM,aAAa,aAAa,OAAO,CAAC;YACxC,IAAI,YAAY;gBACd,SAAS;gBACT,WAAW;YACb,OAAO;gBACL,+BAA+B;gBAC/B,SAAS;gBACT,WAAW;YACb;YAEA,sDAAsD;YACtD,MAAM,aAAa,OAAO,UAAU,CAAC;YACrC,MAAM;wDAAe;oBACnB,IAAI,UAAU,UAAU;wBACtB,WAAW;oBACb;gBACF;;YAEA,WAAW,gBAAgB,CAAC,UAAU;YACtC;2CAAO,IAAM,WAAW,mBAAmB,CAAC,UAAU;;QACxD;kCAAG,EAAE,GAAG,gDAAgD;IAExD,gCAAgC;IAChC,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;mCAAE;YACR,IAAI,SAAS;gBACX,QAAQ,GAAG,CAAC,qBAAqB;gBACjC,WAAW;YACb;QACF;kCAAG;QAAC;QAAO;KAAQ;IAEnB,MAAM,aAAa,CAAC;QAClB,IAAI,OAAO,aAAa,aAAa,QAAQ,kBAAkB;QAE/D,QAAQ,GAAG,CAAC,mBAAmB;QAC/B,MAAM,OAAO,SAAS,eAAe;QAErC,gCAAgC;QAChC,KAAK,SAAS,CAAC,MAAM,CAAC,cAAc,eAAe;QAEnD,IAAI,UAA4B;QAEhC,IAAI,kBAAkB,QAAQ;YAC5B,KAAK,SAAS,CAAC,GAAG,CAAC;YACnB,UAAU;YACV,SAAS,IAAI,CAAC,YAAY,CAAC,cAAc;QAC3C,OAAO,IAAI,kBAAkB,SAAS;YACpC,KAAK,SAAS,CAAC,GAAG,CAAC;YACnB,UAAU;YACV,SAAS,IAAI,CAAC,YAAY,CAAC,cAAc;QAC3C,OAAO,IAAI,kBAAkB,UAAU;YACrC,0BAA0B;YAC1B,MAAM,cAAc,OAAO,UAAU,CAAC,gCAAgC,OAAO;YAC7E,IAAI,aAAa;gBACf,KAAK,SAAS,CAAC,GAAG,CAAC;gBACnB,UAAU;gBACV,SAAS,IAAI,CAAC,YAAY,CAAC,cAAc;YAC3C,OAAO;gBACL,KAAK,SAAS,CAAC,GAAG,CAAC;gBACnB,UAAU;gBACV,SAAS,IAAI,CAAC,YAAY,CAAC,cAAc;YAC3C;YACA,KAAK,SAAS,CAAC,GAAG,CAAC;QACrB;QAEA,QAAQ;IACV;IAEA,MAAM,gBAAgB,CAAC;QACrB,QAAQ,GAAG,CAAC,qBAAqB;QAEjC,4BAA4B;QAC5B,aAAa,OAAO,CAAC,SAAS;QAE9B,wBAAwB;QACxB,SAAS;QAET,iEAAiE;QACjE,SAAS,eAAe,CAAC,OAAO,CAAC,YAAY,GAAG;QAChD,WAAW;YACT,WAAW;YACX,SAAS,eAAe,CAAC,OAAO,CAAC,YAAY,GAAG;QAClD,GAAG;IACL;IAEA,yCAAyC;IACzC,MAAM,WAAW,CAAA,GAAA,8MAAA,CAAA,cAAW,AAAD,EAAE;QAC3B,SAAS;YACP,MAAM;YACN,SAAS;gBACP,MAAM,SAAS,UAAU,YAAY;YACvC;YACA,WAAW;gBACT,MAAM,SAAS,UAAU,YAAY;YACvC;YACA,YAAY;gBACV,SAAS,SAAS,UAAU,YAAY;gBACxC,OAAO,SAAS,UAAU,YAAY;YACxC;YACA,MAAM;gBACJ,SAAS,SAAS,UAAU,wBAAwB;gBACpD,WAAW,SAAS,UAAU,uBAAuB;YACvD;QACF;QACA,YAAY;YACV,gBAAgB;gBACd,gBAAgB;oBACd,MAAM;wBACJ,iBAAiB,SAAS,UAAU,YAAY;wBAChD,OAAO,SAAS,UAAU,wBAAwB;wBAClD,YAAY;oBACd;oBACA,aAAa;wBACX,iBAAiB,SAAS,UAAU,YAAY;wBAChD,WAAW;oBACb;gBACF;YACF;YACA,UAAU;gBACR,gBAAgB;oBACd,MAAM;wBACJ,iBAAiB,SAAS,UAAU,YAAY;oBAClD;gBACF;YACF;YACA,WAAW;gBACT,cAAc;oBACZ,YAAY;wBACV,OAAO;4BACL,iBAAiB,SAAS,UAAU,YAAY;4BAChD,aAAa,SAAS,UAClB,kCACA;wBACN;oBACF;gBACF;gBACA,gBAAgB;oBACd,MAAM;wBACJ,sBAAsB;4BACpB,iBAAiB,SAAS,UAAU,YAAY;4BAChD,aAAa,SAAS,UAClB,kCACA;wBACN;oBACF;oBACA,OAAO;wBACL,iBAAiB,SAAS,UAAU,YAAY;wBAChD,aAAa,SAAS,UAClB,kCACA;oBACN;gBACF;YACF;QACF;IACF;IAEA,oCAAoC;IACpC,IAAI,CAAC,SAAS;QACZ,qBAAO;sBAAG;;IACZ;IAEA,qBACE,6LAAC,aAAa,QAAQ;QAAC,OAAO;YAAE;YAAO,UAAU;QAAc;kBAC7D,cAAA,6LAAC,kNAAA,CAAA,gBAAgB;YAAC,OAAO;;8BACvB,6LAAC,yKAAA,CAAA,UAAW;;;;;gBACX;;;;;;;;;;;;AAIT;GAnLgB;KAAA;AAsLT,SAAS;;IACd,wDAAwD;IACxD,OAAO,CAAA,GAAA,6JAAA,CAAA,aAAU,AAAD,EAAE;AACpB;IAHgB","debugId":null}}]
}