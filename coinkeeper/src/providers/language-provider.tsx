'use client';

import { createContext, useContext, useEffect, useState, ReactNode, useCallback } from 'react';

type Language = 'en' | 'ru' | 'kk';

// –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Ç–∏–ø –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –≤–ª–æ–∂–µ–Ω–Ω—ã—Ö –ø–µ—Ä–µ–≤–æ–¥–æ–≤
type TranslationValue = string | { [key: string]: TranslationValue };
type TranslationRecord = Record<string, TranslationValue>;

interface LanguageContextProps {
  language: Language;
  setLanguage: (language: Language) => void;
  t: (key: string) => string;
  isClientReady: boolean;
}

// Create context with default values to prevent errors during initialization
const defaultContextValue: LanguageContextProps = {
  language: 'en',
  setLanguage: () => {},
  t: (key: string) => key,
  isClientReady: false
};

const LanguageContext = createContext<LanguageContextProps>(defaultContextValue);

// Translations dictionary - make sure to EXACTLY match capitalization for SSR/CSR consistency
const translations: Record<Language, TranslationRecord> = {
  en: {
    'dashboard': {
      'title': 'Dashboard',
      'welcome_back': 'Welcome back, User!',
      'financial_overview': "Here's your financial overview",
      'total_balance': 'Total Balance',
      'income': 'Income',
      'expenses': 'Expenses',
      'spending_overview': 'Spending Overview',
      'spending_patterns': 'Chart showing your spending patterns will be displayed here',
      'recent_transactions': 'Recent Transactions',
      'transactions_appear': 'Your recent transactions will appear here'
    },
    'accounts': {
      'title': 'Accounts',
      'add_account': 'Add Account',
      'balance': 'Balance',
      'currency': 'Currency',
      'name': 'Name',
      'no_accounts': 'No accounts yet. Click "Add Account" to get started.',
      'edit_account': 'Edit Account',
      'delete_account': 'Delete Account'
    },
    'transactions': {
      'title': 'Transactions',
      'add_transaction': 'Add Transaction',
      'edit_transaction': 'Edit Transaction',
      'date': 'Date',
      'description': 'Description',
      'category': 'Category',
      'account': 'Account',
      'to_account': 'To Account',
      'amount': 'Amount',
      'type': 'Type',
      'actions': 'Actions',
      'rows_per_page': 'Rows per page',
      'income': 'Income',
      'expense': 'Expense',
      'transfer': 'Transfer',
      'no_transactions': 'No transactions yet. Click "Add Transaction" to get started.',
      'delete_confirmation': 'Are you sure you want to delete this transaction?',
      'save_failed': 'Failed to save transaction',
      'save_failed_try_again': 'Failed to save transaction. Please try again.'
    },
    'categories': {
      'title': 'Categories',
      'add_category': 'Add Category',
      'edit_category': 'Edit Category',
      'expense': 'Expense',
      'income': 'Income',
      'name': 'Name',
      'color': 'Color',
      'type': 'Type',
      'delete_confirmation': 'Are you sure you want to delete this category?',
      'no_categories': 'No categories yet. Click "Add Category" to get started.',
      'personal_care': 'Personal Care',
      'travel': 'Travel',
      'health': 'Health',
      'other': 'Other',
      'entertainment': 'Entertainment',
      'salary': 'Salary',
      'education': 'Education',
      'debt_payments': 'Debt Payments',
      'investments': 'Investments',
      'gifts': 'Gifts',
      'food_dining': 'Food & Dining',
      'transportation': 'Transportation',
      'housing': 'Housing',
      'utilities': 'Utilities',
      'shopping': 'Shopping',
      'icon': 'Icon (optional)',
      'icon_helper_text': 'Enter an icon name or emoji symbol (e.g. üçï, üè†, üí∞, üöó)',
      'popular_icons': 'Popular'
    },
    'budgets': {
      'title': 'Budgets',
      'spent': 'Spent',
      'budget': 'Budget',
      'edit_budget': 'Edit Budget'
    },
    'goals': 'Goals',
    'reports': {
      'financial_reports': 'Financial Reports',
      'time_range': 'Time Range',
      'time_range_options': {
        'last_7_days': 'Last 7 days',
        'last_30_days': 'Last 30 days',
        'last_90_days': 'Last 90 days',
        'last_year': 'Last year'
      },
      'overview': 'Overview',
      'categories': 'Categories',
      'trends': 'Trends',
      'income_vs_expenses': 'Income vs Expenses',
      'category_distribution': 'Category Distribution',
      'monthly_trends': 'Monthly Trends',
      'income': 'Income',
      'expenses': 'Expenses',
      'savings': 'Savings',
      'of_total_expenses': 'of total expenses'
    },
    'settings': {
      title: 'Settings',
      appearance: {
        title: 'Appearance',
        theme: 'Theme',
        light: 'Light',
        dark: 'Dark',
        system: 'System'
      },
      currency: {
        title: 'Currency',
        default: 'Default Currency'
      },
      language: {
        title: 'Language & Format',
        select: 'Language',
        dateFormat: 'Date Format'
      },
      notifications: {
        title: 'Notifications',
        enable: 'Enable Budget Notifications'
      },
      security: {
        title: 'Security',
        passwordDesc: 'Change your account password. It is recommended to use a strong password.',
        currentPassword: 'Current Password',
        newPassword: 'New Password',
        confirmPassword: 'Confirm Password',
        changePassword: 'Change Password',
        passwordSuccess: 'Password successfully updated!'
      },
      saveButton: 'Save Settings',
      saveSuccess: 'Settings saved successfully!'
    },
    'welcome': 'Welcome',
    'logout': 'Logout',
    'add_budget': 'Add Budget',
    'budget_name': 'Budget Name',
    'amount': 'Amount',
    'period': 'Period',
    'category': 'Category',
    'monthly': 'Monthly',
    'yearly': 'Yearly',
    'cancel': 'Cancel',
    'add': 'Add',
    'save': 'Save',
    'edit': 'Edit',
    'save_settings': 'Save Settings',
    'change_password': 'Change Password',
    'current_password': 'Current Password',
    'new_password': 'New Password',
    'confirm_password': 'Confirm Password',
    'update_password': 'Update Password',
    'appearance': 'Appearance',
    'theme': 'Theme',
    'light': 'Light',
    'dark': 'Dark',
    'system': 'Use system settings',
    'currency': 'Currency',
    'default_currency': 'Default Currency',
    'language_and_format': 'Language and Format',
    'language': 'Language',
    'date_format': 'Date Format',
    'notifications': 'Notifications',
    'enable_budget_notifications': 'Enable budget notifications',
    // Goal page translations
    'goal_name': 'Goal Name',
    'target_amount': 'Target Amount ($)',
    'current_amount': 'Current Amount ($)',
    'deadline': 'Deadline',
    'description': 'Description (Optional)',
    'add_goal': 'Add Goal',
    'edit_goal': 'Edit Goal',
    'delete_goal': 'Delete Goal',
    'no_goals': 'No goals created yet. Click "Add Goal" to get started.',
    'confirmation_delete': 'Are you sure you want to delete this goal?',
    // Common phrases
    'of': 'of',
    'error': 'Error'
  },
  ru: {
    'dashboard': {
      'title': '–ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è',
      'welcome_back': '–° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º, –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å!',
      'financial_overview': '–í–∞—à —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–π –æ–±–∑–æ—Ä',
      'total_balance': '–û–±—â–∏–π –±–∞–ª–∞–Ω—Å',
      'income': '–î–æ—Ö–æ–¥',
      'expenses': '–†–∞—Å—Ö–æ–¥—ã',
      'spending_overview': '–û–±–∑–æ—Ä —Ä–∞—Å—Ö–æ–¥–æ–≤',
      'spending_patterns': '–ó–¥–µ—Å—å –±—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –≥—Ä–∞—Ñ–∏–∫ –≤–∞—à–∏—Ö —Ä–∞—Å—Ö–æ–¥–æ–≤',
      'recent_transactions': '–ü–æ—Å–ª–µ–¥–Ω–∏–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏',
      'transactions_appear': '–ó–¥–µ—Å—å –ø–æ—è–≤—è—Ç—Å—è –≤–∞—à–∏ –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏'
    },
    'accounts': {
      'title': '–°—á–µ—Ç–∞',
      'add_account': '–î–æ–±–∞–≤–∏—Ç—å —Å—á–µ—Ç',
      'balance': '–ë–∞–ª–∞–Ω—Å',
      'currency': '–í–∞–ª—é—Ç–∞',
      'name': '–ù–∞–∑–≤–∞–Ω–∏–µ',
      'no_accounts': '–ï—â–µ –Ω–µ—Ç —Å—á–µ—Ç–æ–≤. –ù–∞–∂–º–∏—Ç–µ "–î–æ–±–∞–≤–∏—Ç—å —Å—á–µ—Ç", —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å.',
      'edit_account': '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å—á–µ—Ç',
      'delete_account': '–£–¥–∞–ª–∏—Ç—å —Å—á–µ—Ç'
    },
    'transactions': {
      'title': '–¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏',
      'add_transaction': '–î–æ–±–∞–≤–∏—Ç—å —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é',
      'edit_transaction': '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é',
      'date': '–î–∞—Ç–∞',
      'description': '–û–ø–∏—Å–∞–Ω–∏–µ',
      'category': '–ö–∞—Ç–µ–≥–æ—Ä–∏—è',
      'account': '–°—á–µ—Ç',
      'to_account': '–ù–∞ —Å—á–µ—Ç',
      'amount': '–°—É–º–º–∞',
      'type': '–¢–∏–ø',
      'actions': '–î–µ–π—Å—Ç–≤–∏—è',
      'rows_per_page': '–°—Ç—Ä–æ–∫ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ',
      'income': '–î–æ—Ö–æ–¥',
      'expense': '–†–∞—Å—Ö–æ–¥',
      'transfer': '–ü–µ—Ä–µ–≤–æ–¥',
      'no_transactions': '–ï—â–µ –Ω–µ—Ç —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π. –ù–∞–∂–º–∏—Ç–µ "–î–æ–±–∞–≤–∏—Ç—å —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é", —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å.',
      'delete_confirmation': '–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç—É —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é?',
      'save_failed': '–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é',
      'save_failed_try_again': '–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.'
    },
    'categories': {
      'title': '–ö–∞—Ç–µ–≥–æ—Ä–∏–∏',
      'add_category': '–î–æ–±–∞–≤–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é',
      'edit_category': '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é',
      'expense': '–†–∞—Å—Ö–æ–¥',
      'income': '–î–æ—Ö–æ–¥',
      'name': '–ù–∞–∑–≤–∞–Ω–∏–µ',
      'color': '–¶–≤–µ—Ç',
      'type': '–¢–∏–ø',
      'delete_confirmation': '–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç—É –∫–∞—Ç–µ–≥–æ—Ä–∏—é?',
      'no_categories': '–ï—â–µ –Ω–µ—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏–π. –ù–∞–∂–º–∏—Ç–µ "–î–æ–±–∞–≤–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é", —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å.',
      'personal_care': '–õ–∏—á–Ω—ã–π —É—Ö–æ–¥',
      'travel': '–ü—É—Ç–µ—à–µ—Å—Ç–≤–∏—è',
      'health': '–ó–¥–æ—Ä–æ–≤—å–µ',
      'other': '–î—Ä—É–≥–æ–µ',
      'entertainment': '–†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è',
      'salary': '–ó–∞—Ä–ø–ª–∞—Ç–∞',
      'education': '–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ',
      'debt_payments': '–í—ã–ø–ª–∞—Ç—ã –ø–æ –∫—Ä–µ–¥–∏—Ç—É',
      'investments': '–ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏',
      'gifts': '–ü–æ–¥–∞—Ä–∫–∏',
      'food_dining': '–ï–¥–∞ –∏ —Ä–µ—Å—Ç–æ—Ä–∞–Ω—ã',
      'transportation': '–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç',
      'housing': '–ñ–∏–ª—å—ë',
      'utilities': '–ö–æ–º–º—É–Ω–∞–ª—å–Ω—ã–µ —É—Å–ª—É–≥–∏',
      'shopping': '–ü–æ–∫—É–ø–∫–∏',
      'icon': '–ò–∫–æ–Ω–∫–∞ (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)',
      'icon_helper_text': '–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏–∫–æ–Ω–∫–∏ –∏–ª–∏ —Å–º–∞–π–ª–∏–∫ (–Ω–∞–ø—Ä–∏–º–µ—Ä, üçï, üè†, üí∞, üöó)',
      'popular_icons': '–ü–æ–ø—É–ª—è—Ä–Ω—ã–µ'
    },
    'budgets': {
      'title': '–ë—é–¥–∂–µ—Ç—ã',
      'spent': '–ü–æ—Ç—Ä–∞—á–µ–Ω–æ',
      'budget': '–ë—é–¥–∂–µ—Ç',
      'edit_budget': '–ò–∑–º–µ–Ω–∏—Ç—å –±—é–¥–∂–µ—Ç'
    },
    'goals': '–¶–µ–ª–∏',
    'reports': {
      'financial_reports': '–§–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –æ—Ç—á–µ—Ç—ã',
      'time_range': '–ü–µ—Ä–∏–æ–¥ –≤—Ä–µ–º–µ–Ω–∏',
      'time_range_options': {
        'last_7_days': '–ü–æ—Å–ª–µ–¥–Ω–∏–µ 7 –¥–Ω–µ–π',
        'last_30_days': '–ü–æ—Å–ª–µ–¥–Ω–∏–µ 30 –¥–Ω–µ–π',
        'last_90_days': '–ü–æ—Å–ª–µ–¥–Ω–∏–µ 90 –¥–Ω–µ–π',
        'last_year': '–ü–æ—Å–ª–µ–¥–Ω–∏–π –≥–æ–¥'
      },
      'overview': '–û–±–∑–æ—Ä',
      'categories': '–ö–∞—Ç–µ–≥–æ—Ä–∏–∏',
      'trends': '–¢–µ–Ω–¥–µ–Ω—Ü–∏–∏',
      'income_vs_expenses': '–î–æ—Ö–æ–¥—ã –∏ —Ä–∞—Å—Ö–æ–¥—ã',
      'category_distribution': '–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º',
      'monthly_trends': '–ï–∂–µ–º–µ—Å—è—á–Ω—ã–µ —Ç–µ–Ω–¥–µ–Ω—Ü–∏–∏',
      'income': '–î–æ—Ö–æ–¥',
      'expenses': '–†–∞—Å—Ö–æ–¥—ã',
      'savings': '–°–±–µ—Ä–µ–∂–µ–Ω–∏—è',
      'of_total_expenses': '–æ—Ç –æ–±—â–∏—Ö —Ä–∞—Å—Ö–æ–¥–æ–≤'
    },
    'settings': {
      title: '–ù–∞—Å—Ç—Ä–æ–π–∫–∏',
      appearance: {
        title: '–í–Ω–µ—à–Ω–∏–π –≤–∏–¥',
        theme: '–¢–µ–º–∞',
        light: '–°–≤–µ—Ç–ª–∞—è',
        dark: '–¢–µ–º–Ω–∞—è',
        system: '–°–∏—Å—Ç–µ–º–Ω–∞—è'
      },
      currency: {
        title: '–í–∞–ª—é—Ç–∞',
        default: '–û—Å–Ω–æ–≤–Ω–∞—è –≤–∞–ª—é—Ç–∞'
      },
      language: {
        title: '–Ø–∑—ã–∫ –∏ —Ñ–æ—Ä–º–∞—Ç',
        select: '–Ø–∑—ã–∫',
        dateFormat: '–§–æ—Ä–º–∞—Ç –¥–∞—Ç—ã'
      },
      notifications: {
        title: '–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è',
        enable: '–í–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –±—é–¥–∂–µ—Ç–µ'
      },
      security: {
        title: '–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å',
        passwordDesc: '–°–º–µ–Ω–∞ –ø–∞—Ä–æ–ª—è —É—á–µ—Ç–Ω–æ–π –∑–∞–ø–∏—Å–∏. –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –Ω–∞–¥–µ–∂–Ω—ã–π –ø–∞—Ä–æ–ª—å.',
        currentPassword: '–¢–µ–∫—É—â–∏–π –ø–∞—Ä–æ–ª—å',
        newPassword: '–ù–æ–≤—ã–π –ø–∞—Ä–æ–ª—å',
        confirmPassword: '–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å',
        changePassword: '–°–º–µ–Ω–∏—Ç—å –ø–∞—Ä–æ–ª—å',
        passwordSuccess: '–ü–∞—Ä–æ–ª—å —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω!'
      },
      saveButton: '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏',
      saveSuccess: '–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã!'
    },
    'welcome': '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å',
    'logout': '–í—ã—Ö–æ–¥',
    'add_budget': '–î–æ–±–∞–≤–∏—Ç—å –±—é–¥–∂–µ—Ç',
    'budget_name': '–ù–∞–∑–≤–∞–Ω–∏–µ –±—é–¥–∂–µ—Ç–∞',
    'amount': '–°—É–º–º–∞',
    'period': '–ü–µ—Ä–∏–æ–¥',
    'category': '–ö–∞—Ç–µ–≥–æ—Ä–∏—è',
    'monthly': '–ï–∂–µ–º–µ—Å—è—á–Ω–æ',
    'yearly': '–ï–∂–µ–≥–æ–¥–Ω–æ',
    'cancel': '–û—Ç–º–µ–Ω–∞',
    'add': '–î–æ–±–∞–≤–∏—Ç—å',
    'save': '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å',
    'edit': '–ò–∑–º–µ–Ω–∏—Ç—å',
    'save_settings': '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏',
    'change_password': '–ò–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–æ–ª—å',
    'current_password': '–¢–µ–∫—É—â–∏–π –ø–∞—Ä–æ–ª—å',
    'new_password': '–ù–æ–≤—ã–π –ø–∞—Ä–æ–ª—å',
    'confirm_password': '–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å',
    'update_password': '–û–±–Ω–æ–≤–∏—Ç—å –ø–∞—Ä–æ–ª—å',
    'appearance': '–í–Ω–µ—à–Ω–∏–π –≤–∏–¥',
    'theme': '–¢–µ–º–∞',
    'light': '–°–≤–µ—Ç–ª–∞—è',
    'dark': '–¢–µ–º–Ω–∞—è',
    'system': '–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∏—Å—Ç–µ–º—ã',
    'currency': '–í–∞–ª—é—Ç–∞',
    'default_currency': '–í–∞–ª—é—Ç–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é',
    'language_and_format': '–Ø–∑—ã–∫ –∏ —Ñ–æ—Ä–º–∞—Ç',
    'language': '–Ø–∑—ã–∫',
    'date_format': '–§–æ—Ä–º–∞—Ç –¥–∞—Ç—ã',
    'notifications': '–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è',
    'enable_budget_notifications': '–í–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –±—é–¥–∂–µ—Ç–µ',
    // Goal page translations
    'goal_name': '–ù–∞–∑–≤–∞–Ω–∏–µ —Ü–µ–ª–∏',
    'target_amount': '–¶–µ–ª–µ–≤–∞—è —Å—É–º–º–∞ (‚ÇΩ)',
    'current_amount': '–¢–µ–∫—É—â–∞—è —Å—É–º–º–∞ (‚ÇΩ)',
    'deadline': '–°—Ä–æ–∫',
    'description': '–û–ø–∏—Å–∞–Ω–∏–µ (–ù–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)',
    'add_goal': '–î–æ–±–∞–≤–∏—Ç—å —Ü–µ–ª—å',
    'edit_goal': '–ò–∑–º–µ–Ω–∏—Ç—å —Ü–µ–ª—å',
    'delete_goal': '–£–¥–∞–ª–∏—Ç—å —Ü–µ–ª—å',
    'no_goals': '–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç —Ü–µ–ª–µ–π. –ù–∞–∂–º–∏—Ç–µ "–î–æ–±–∞–≤–∏—Ç—å —Ü–µ–ª—å", —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å.',
    'confirmation_delete': '–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç—É —Ü–µ–ª—å?',
    // Common phrases
    'of': '–∏–∑',
    'error': '–û—à–∏–±–∫–∞'
  },
  kk: {
    'dashboard': {
      'title': '–ë–∞—Å“õ–∞—Ä—É –ø–∞–Ω–µ–ª—ñ',
      'welcome_back': '“ö–∞–π—Ç–∞ –æ—Ä–∞–ª—É—ã“£—ã–∑–±–µ–Ω, –ü–∞–π–¥–∞–ª–∞–Ω—É—à—ã!',
      'financial_overview': '–°—ñ–∑–¥—ñ“£ “õ–∞—Ä–∂—ã–ª—ã“õ —à–æ–ª—É—ã“£—ã–∑',
      'total_balance': '–ñ–∞–ª–ø—ã –±–∞–ª–∞–Ω—Å',
      'income': '–ö—ñ—Ä—ñ—Å',
      'expenses': '–®—ã“ì—ã—Å—Ç–∞—Ä',
      'spending_overview': '–®—ã“ì—ã—Å—Ç–∞—Ä —à–æ–ª—É—ã',
      'spending_patterns': '–ú“±–Ω–¥–∞ —Å—ñ–∑–¥—ñ“£ —à—ã“ì—ã–Ω–¥–∞—Ä “Ø–ª–≥—ñ—Å—ñ –∫”©—Ä—Å–µ—Ç—ñ–ª–µ–¥—ñ',
      'recent_transactions': '–°–æ“£“ì—ã —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è–ª–∞—Ä',
      'transactions_appear': '–ú“±–Ω–¥–∞ —Å—ñ–∑–¥—ñ“£ —Å–æ“£“ì—ã —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è–ª–∞—Ä—ã“£—ã–∑ –ø–∞–π–¥–∞ –±–æ–ª–∞–¥—ã'
    },
    'accounts': {
      'title': '–®–æ—Ç—Ç–∞—Ä',
      'add_account': '–®–æ—Ç “õ–æ—Å—É',
      'balance': '–ë–∞–ª–∞–Ω—Å',
      'currency': '–í–∞–ª—é—Ç–∞',
      'name': '–ê—Ç–∞—É—ã',
      'no_accounts': '”ò–ª—ñ —à–æ—Ç—Ç–∞—Ä –∂–æ“õ. –ë–∞—Å—Ç–∞—É “Ø—à—ñ–Ω "–®–æ—Ç “õ–æ—Å—É" —Ç“Ø–π–º–µ—Å—ñ–Ω –±–∞—Å—ã“£—ã–∑.',
      'edit_account': '–®–æ—Ç—Ç—ã ”©“£–¥–µ—É',
      'delete_account': '–®–æ—Ç—Ç—ã –∂–æ—é'
    },
    'transactions': {
      'title': '–¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è–ª–∞—Ä',
      'add_transaction': '–¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è “õ–æ—Å—É',
      'edit_transaction': '–¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è–Ω—ã ”©“£–¥–µ—É',
      'date': '–ö“Ø–Ω—ñ',
      'description': '–°–∏–ø–∞—Ç—Ç–∞–º–∞',
      'category': '–°–∞–Ω–∞—Ç',
      'account': '–®–æ—Ç',
      'to_account': '–®–æ—Ç“õ–∞',
      'amount': '–°–æ–º–∞',
      'type': '–¢“Ø—Ä—ñ',
      'actions': '”ò—Ä–µ–∫–µ—Ç—Ç–µ—Ä',
      'rows_per_page': '–ë–µ—Ç—Ç–µ–≥—ñ –∂–æ–ª–¥–∞—Ä —Å–∞–Ω—ã',
      'income': '–ö—ñ—Ä—ñ—Å',
      'expense': '–®—ã“ì—ã—Å',
      'transfer': '–ê—É–¥–∞—Ä—ã–º',
      'no_transactions': '”ò–ª—ñ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è–ª–∞—Ä –∂–æ“õ. –ë–∞—Å—Ç–∞—É “Ø—à—ñ–Ω "–¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è “õ–æ—Å—É" —Ç“Ø–π–º–µ—Å—ñ–Ω –±–∞—Å—ã“£—ã–∑.',
      'delete_confirmation': '–ë“±–ª —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è–Ω—ã —à—ã–Ω—ã–º–µ–Ω –∂–æ–π“ì—ã“£—ã–∑ –∫–µ–ª–µ –º–µ?',
      'save_failed': '–¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è–Ω—ã —Å–∞“õ—Ç–∞—É —Å”ô—Ç—Å—ñ–∑ –∞—è“õ—Ç–∞–ª–¥—ã',
      'save_failed_try_again': '–¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è–Ω—ã —Å–∞“õ—Ç–∞—É —Å”ô—Ç—Å—ñ–∑ –∞—è“õ—Ç–∞–ª–¥—ã. “ö–∞–π—Ç–∞–ª–∞–ø –∫”©—Ä—ñ“£—ñ–∑.'
    },
    'categories': {
      'title': '–°–∞–Ω–∞—Ç—Ç–∞—Ä',
      'add_category': '–°–∞–Ω–∞—Ç “õ–æ—Å—É',
      'edit_category': '–°–∞–Ω–∞—Ç—Ç—ã ”©“£–¥–µ—É',
      'expense': '–®—ã“ì—ã—Å',
      'income': '–ö—ñ—Ä—ñ—Å',
      'name': '–ê—Ç–∞—É—ã',
      'color': '–¢“Ø—Å—ñ',
      'type': '–¢“Ø—Ä—ñ',
      'delete_confirmation': '–ë“±–ª —Å–∞–Ω–∞—Ç—Ç—ã —à—ã–Ω—ã–º–µ–Ω –∂–æ–π“ì—ã“£—ã–∑ –∫–µ–ª–µ –º–µ?',
      'no_categories': '”ò–ª—ñ —Å–∞–Ω–∞—Ç—Ç–∞—Ä –∂–æ“õ. –ë–∞—Å—Ç–∞—É “Ø—à—ñ–Ω "–°–∞–Ω–∞—Ç “õ–æ—Å—É" —Ç“Ø–π–º–µ—Å—ñ–Ω –±–∞—Å—ã“£—ã–∑.',
      'personal_care': '–ñ–µ–∫–µ –∫“Ø—Ç—ñ–º',
      'travel': '–°–∞—è—Ö–∞—Ç',
      'health': '–î–µ–Ω—Å–∞—É–ª—ã“õ',
      'other': '–ë–∞—Å“õ–∞',
      'entertainment': '–û–π—ã–Ω-—Å–∞—É—ã“õ',
      'salary': '–ñ–∞–ª–∞“õ—ã',
      'education': '–ë—ñ–ª—ñ–º',
      'debt_payments': '–ù–µ—Å–∏–µ —Ç”©–ª–µ–º–¥–µ—Ä—ñ',
      'investments': '–ò–Ω–≤–µ—Å—Ç–∏—Ü–∏—è–ª–∞—Ä',
      'gifts': '–°—ã–π–ª—ã“õ—Ç–∞—Ä',
      'food_dining': '–¢–∞–º–∞“õ –∂”ô–Ω–µ –º–µ–π—Ä–∞–º—Ö–∞–Ω–∞–ª–∞—Ä',
      'transportation': '–ö”©–ª—ñ–∫',
      'housing': '–¢“±—Ä“ì—ã–Ω “Ø–π',
      'utilities': '–ö–æ–º–º—É–Ω–∞–ª–¥—ã“õ “õ—ã–∑–º–µ—Ç—Ç–µ—Ä',
      'shopping': '–°–∞—É–¥–∞',
      'icon': '–ë–µ–ª–≥—ñ—à–µ (–º—ñ–Ω–¥–µ—Ç—Ç—ñ –µ–º–µ—Å)',
      'icon_helper_text': '–ë–µ–ª–≥—ñ—à–µ –∞—Ç–∞—É—ã–Ω –Ω–µ–º–µ—Å–µ —ç–º–æ–¥–∑–∏ —Ç–∞“£–±–∞—Å—ã–Ω –µ–Ω–≥—ñ–∑—ñ“£—ñ–∑ (–º—ã—Å–∞–ª—ã, üçï, üè†, üí∞, üöó)',
      'popular_icons': '–¢–∞–Ω—ã–º–∞–ª'
    },
    'budgets': {
      'title': '–ë—é–¥–∂–µ—Ç—Ç–µ—Ä',
      'spent': '–ñ“±–º—Å–∞–ª“ì–∞–Ω',
      'budget': '–ë—é–¥–∂–µ—Ç',
      'edit_budget': '–ë—é–¥–∂–µ—Ç—Ç—ñ ”©“£–¥–µ—É'
    },
    'goals': '–ú–∞“õ—Å–∞—Ç—Ç–∞—Ä',
    'reports': {
      'financial_reports': '“ö–∞—Ä–∂—ã–ª—ã“õ –µ—Å–µ–ø—Ç–µ—Ä',
      'time_range': '–£–∞“õ—ã—Ç –∞—Ä–∞–ª—ã“ì—ã',
      'time_range_options': {
        'last_7_days': '–°–æ“£“ì—ã 7 –∫“Ø–Ω',
        'last_30_days': '–°–æ“£“ì—ã 30 –∫“Ø–Ω',
        'last_90_days': '–°–æ“£“ì—ã 90 –∫“Ø–Ω',
        'last_year': '”®—Ç–∫–µ–Ω –∂—ã–ª'
      },
      'overview': '–®–æ–ª—É',
      'categories': '–°–∞–Ω–∞—Ç—Ç–∞—Ä',
      'trends': '“Æ—Ä–¥—ñ—Å—Ç–µ—Ä',
      'income_vs_expenses': '–ö—ñ—Ä—ñ—Å—Ç–µ—Ä –º–µ–Ω —à—ã“ì—ã—Å—Ç–∞—Ä',
      'category_distribution': '–°–∞–Ω–∞—Ç—Ç–∞—Ä –±–æ–π—ã–Ω—à–∞ –±”©–ª—É',
      'monthly_trends': '–ê–π —Å–∞–π—ã–Ω“ì—ã “Ø—Ä–¥—ñ—Å—Ç–µ—Ä',
      'income': '–ö—ñ—Ä—ñ—Å',
      'expenses': '–®—ã“ì—ã—Å—Ç–∞—Ä',
      'savings': '–ñ–∏–Ω–∞“õ—Ç–∞—Ä',
      'of_total_expenses': '–∂–∞–ª–ø—ã —à—ã“ì—ã—Å—Ç–∞—Ä–¥–∞–Ω'
    },
    'settings': {
      title: '–ü–∞—Ä–∞–º–µ—Ç—Ä–ª–µ—Ä',
      appearance: {
        title: '–°—ã—Ä—Ç“õ—ã —Ç“Ø—Ä—ñ',
        theme: '–¢–∞“õ—ã—Ä—ã–ø',
        light: '–ñ–∞—Ä—ã“õ',
        dark: '“ö–∞—Ä–∞“£“ì—ã',
        system: '–ñ“Ø–π–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–ª–µ—Ä—ñ'
      },
      currency: {
        title: '–í–∞–ª—é—Ç–∞',
        default: '–ù–µ–≥—ñ–∑–≥—ñ –≤–∞–ª—é—Ç–∞'
      },
      language: {
        title: '–¢—ñ–ª –∂”ô–Ω–µ –ø—ñ—à—ñ–º',
        select: '–¢—ñ–ª',
        dateFormat: '–ö“Ø–Ω –ø—ñ—à—ñ–º—ñ'
      },
      notifications: {
        title: '–•–∞–±–∞—Ä–ª–∞–Ω–¥—ã—Ä—É–ª–∞—Ä',
        enable: '–ë—é–¥–∂–µ—Ç —Ö–∞–±–∞—Ä–ª–∞–Ω–¥—ã—Ä—É–ª–∞—Ä—ã–Ω “õ–æ—Å—É'
      },
      security: {
        title: '“ö–∞—É—ñ–ø—Å—ñ–∑–¥—ñ–∫',
        passwordDesc: '–ê–∫–∫–∞—É–Ω—Ç “õ“±–ø–∏—è—Å”©–∑—ñ–Ω ”©–∑–≥–µ—Ä—Ç—É. –ö“Ø—Ä–¥–µ–ª—ñ “õ“±–ø–∏—è—Å”©–∑ “õ–æ–ª–¥–∞–Ω—É–¥—ã “±—Å—ã–Ω–∞–º—ã–∑.',
        currentPassword: '–ê“ì—ã–º–¥–∞“ì—ã “õ“±–ø–∏—è—Å”©–∑',
        newPassword: '–ñ–∞“£–∞ “õ“±–ø–∏—è—Å”©–∑',
        confirmPassword: '“ö“±–ø–∏—è—Å”©–∑–¥—ñ —Ä–∞—Å—Ç–∞“£—ã–∑',
        changePassword: '“ö“±–ø–∏—è—Å”©–∑–¥—ñ ”©–∑–≥–µ—Ä—Ç—É',
        passwordSuccess: '“ö“±–ø–∏—è —Å”©–∑ —Å”ô—Ç—Ç—ñ –∂–∞“£–∞—Ä—Ç—ã–ª–¥—ã!'
      },
      saveButton: '–ü–∞—Ä–∞–º–µ—Ç—Ä–ª–µ—Ä–¥—ñ —Å–∞“õ—Ç–∞—É',
      saveSuccess: '–ü–∞—Ä–∞–º–µ—Ç—Ä–ª–µ—Ä —Å”ô—Ç—Ç—ñ —Å–∞“õ—Ç–∞–ª–¥—ã!'
    },
    'welcome': '“ö–æ—à –∫–µ–ª–¥—ñ“£—ñ–∑',
    'logout': '–®—ã“ì—É',
    'add_budget': '–ë—é–¥–∂–µ—Ç “õ–æ—Å—É',
    'budget_name': '–ë—é–¥–∂–µ—Ç –∞—Ç–∞—É—ã',
    'amount': '–°–æ–º–∞',
    'period': '–ö–µ–∑–µ“£',
    'category': '–°–∞–Ω–∞—Ç',
    'monthly': '–ê–π —Å–∞–π—ã–Ω',
    'yearly': '–ñ—ã–ª —Å–∞–π—ã–Ω',
    'cancel': '–ë–∞—Å —Ç–∞—Ä—Ç—É',
    'add': '“ö–æ—Å—É',
    'save': '–°–∞“õ—Ç–∞—É',
    'edit': '”®“£–¥–µ—É',
    'save_settings': '–ü–∞—Ä–∞–º–µ—Ç—Ä–ª–µ—Ä–¥—ñ —Å–∞“õ—Ç–∞—É',
    'change_password': '“ö“±–ø–∏—è —Å”©–∑–¥—ñ ”©–∑–≥–µ—Ä—Ç—É',
    'current_password': '–ê“ì—ã–º–¥–∞“ì—ã “õ“±–ø–∏—è —Å”©–∑',
    'new_password': '–ñ–∞“£–∞ “õ“±–ø–∏—è —Å”©–∑',
    'confirm_password': '“ö“±–ø–∏—è —Å”©–∑–¥—ñ —Ä–∞—Å—Ç–∞“£—ã–∑',
    'update_password': '“ö“±–ø–∏—è —Å”©–∑–¥—ñ –∂–∞“£–∞—Ä—Ç—É',
    'appearance': '–°—ã—Ä—Ç“õ—ã —Ç“Ø—Ä—ñ',
    'theme': '–¢–∞“õ—ã—Ä—ã–ø',
    'light': '–ñ–∞—Ä—ã“õ',
    'dark': '“ö–∞—Ä–∞“£“ì—ã',
    'system': '–ñ“Ø–π–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–ª–µ—Ä—ñ–Ω –ø–∞–π–¥–∞–ª–∞–Ω—É',
    'currency': '–í–∞–ª—é—Ç–∞',
    'default_currency': '”ò–¥–µ–ø–∫—ñ –≤–∞–ª—é—Ç–∞',
    'language_and_format': '–¢—ñ–ª –∂”ô–Ω–µ –ø—ñ—à—ñ–º',
    'language': '–¢—ñ–ª',
    'date_format': '–ö“Ø–Ω –ø—ñ—à—ñ–º—ñ',
    'notifications': '–•–∞–±–∞—Ä–ª–∞–Ω–¥—ã—Ä—É–ª–∞—Ä',
    'enable_budget_notifications': '–ë—é–¥–∂–µ—Ç —Ö–∞–±–∞—Ä–ª–∞–Ω–¥—ã—Ä—É–ª–∞—Ä—ã–Ω “õ–æ—Å—É',
    // Goal page translations
    'goal_name': '–ú–∞“õ—Å–∞—Ç –∞—Ç–∞—É—ã',
    'target_amount': '–ú–∞“õ—Å–∞—Ç—Ç—ã —Å–æ–º–∞ (‚Ç∏)',
    'current_amount': '–ê“ì—ã–º–¥–∞“ì—ã —Å–æ–º–∞ (‚Ç∏)',
    'deadline': '–ú–µ—Ä–∑—ñ–º—ñ',
    'description': '–°–∏–ø–∞—Ç—Ç–∞–º–∞ (–ú—ñ–Ω–¥–µ—Ç—Ç—ñ –µ–º–µ—Å)',
    'add_goal': '–ú–∞“õ—Å–∞—Ç “õ–æ—Å—É',
    'edit_goal': '–ú–∞“õ—Å–∞—Ç—Ç—ã ”©“£–¥–µ—É',
    'delete_goal': '–ú–∞“õ—Å–∞—Ç—Ç—ã –∂–æ—é',
    'no_goals': '–°—ñ–∑–¥–µ ”ô–ª—ñ –º–∞“õ—Å–∞—Ç—Ç–∞—Ä –∂–æ“õ. –ë–∞—Å—Ç–∞—É “Ø—à—ñ–Ω "–ú–∞“õ—Å–∞—Ç “õ–æ—Å—É" —Ç“Ø–π–º–µ—Å—ñ–Ω –±–∞—Å—ã“£—ã–∑.',
    'confirmation_delete': '–ë“±–ª –º–∞“õ—Å–∞—Ç—Ç—ã —à—ã–Ω—ã–º–µ–Ω –∂–æ–π“ì—ã“£—ã–∑ –∫–µ–ª–µ –º–µ?',
    // Common phrases
    'of': '—ñ—à—ñ–Ω–µ–Ω',
    'error': '“ö–∞—Ç–µ'
  }
};

export function LanguageProvider({ children }: { children: ReactNode }) {
  const [language, setLanguage] = useState<Language>('en');
  const [isClientReady, setIsClientReady] = useState(false);
  const [loadingError, setLoadingError] = useState<string | null>(null);

  useEffect(() => {
    try {
      console.log('Initializing language provider...');
      
      // Get saved language from localStorage
      const savedLanguage = localStorage.getItem('language') as Language;
      console.log('Saved language from localStorage:', savedLanguage);
      
      if (savedLanguage && ['en', 'ru', 'kk'].includes(savedLanguage)) {
        console.log('Using saved language:', savedLanguage);
        setLanguage(savedLanguage);
        
        // Apply language to HTML tag
        document.documentElement.lang = savedLanguage;
      } else {
        // Default to browser language or 'en'
        const browserLang = navigator.language.split('-')[0];
        console.log('Browser language detected:', browserLang);
        
        if (['en', 'ru', 'kk'].includes(browserLang as Language)) {
          console.log('Using browser language:', browserLang);
          setLanguage(browserLang as Language);
          document.documentElement.lang = browserLang;
          localStorage.setItem('language', browserLang);
        } else {
          console.log('Defaulting to English');
          setLanguage('en');
          document.documentElement.lang = 'en';
          localStorage.setItem('language', 'en');
        }
      }
    } catch (error) {
      console.error('Error initializing language:', error);
      setLoadingError(error instanceof Error ? error.message : 'Failed to initialize language');
    } finally {
      // Mark client as ready for rendering
      setIsClientReady(true);
    }
  }, []);

  // Update language when it changes
  useEffect(() => {
    if (isClientReady) {
      try {
        localStorage.setItem('language', language);
        document.documentElement.lang = language;
      } catch (error) {
        console.error('Error updating language:', error);
      }
    }
  }, [language, isClientReady]);

  const applyLanguage = (selectedLanguage: Language) => {
    try {
      if (typeof document === 'undefined') return;
      document.documentElement.lang = selectedLanguage;
    } catch (error) {
      console.error('Error applying language:', error);
    }
  };

  const setLanguageValue = useCallback((newLanguage: Language) => {
    console.log('Setting language to:', newLanguage);
    
    // Save to localStorage
    localStorage.setItem('language', newLanguage);
    
    // Update language state
    setLanguage(newLanguage);
    
    // Apply to document
    document.documentElement.lang = newLanguage;
    
    console.log('Language updated successfully');
    
    // Force refresh to ensure all components update
    setIsClientReady(false);
    setTimeout(() => {
      console.log('Refreshing components after language change');
      setIsClientReady(true);
      console.log('Language change complete');
    }, 50);
  }, []);

  // –û–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–µ—Ä–µ–≤–æ–¥–∞, –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—â–∞—è –≤–ª–æ–∂–µ–Ω–Ω—ã–µ –æ–±—ä–µ–∫—Ç—ã
  const t = (key: string): string => {
    if (!key) return '';
    
    try {
      // Get translations for current language or fallback to English
      const currentTranslations = translations[language] || translations.en;
      
      // Handle nested keys like 'settings.appearance.theme'
      if (key.includes('.')) {
        const keys = key.split('.');
        let result: any = currentTranslations;
        
        // Navigate through the nested objects
        for (const k of keys) {
          if (result && typeof result === 'object' && k in result) {
            result = result[k];
          } else {
            console.warn(`Translation key not found: ${key}`);
            return key; // Key path not found
          }
        }
        
        return typeof result === 'string' ? result : key;
      }
      
      // Handle regular keys
      const translation = currentTranslations[key];
      if (typeof translation === 'string') {
        return translation;
      }
      
      // If not found, try English or return the key itself
      const enTranslation = translations.en[key];
      return typeof enTranslation === 'string' ? enTranslation : key;
    } catch (error) {
      console.error(`Error in translation function for key: ${key}`, error);
      return key;
    }
  };

  // Show error message if there was a problem initializing
  if (loadingError && isClientReady) {
    return (
      <div className="p-4 bg-yellow-50 border border-yellow-200 rounded text-yellow-800">
        <p>Language initialization error: {loadingError}</p>
        <p>Using default English language.</p>
      </div>
    );
  }

  return (
    <LanguageContext.Provider value={{ language, setLanguage: setLanguageValue, t, isClientReady }}>
      {children}
    </LanguageContext.Provider>
  );
}

export function useLanguage() {
  const context = useContext(LanguageContext);
  if (!context) {
    throw new Error('useLanguage must be used within a LanguageProvider');
  }
  return context;
} 